<?xml version="1.0" encoding="UTF-8"?>
<project name="NanoGame" default="dist" basedir=".">

	<property name="build.version" value="1.0" />

	<property name="debug" value="on" />

	<property name="src.gameserver" location="gameserver/src/main/java" />
	<property name="src.loginserver" location="loginserver/src/main/java" />
	<property name="src.commons" location="commons/src/main/java" />
	
	<property name="dist" location="dist" />
	<property name="lib" location="lib" />

	<property name="build" location="build" />
	<property name="build.classes" location="${build}/classes" />

	<property name="build.dist" location="${build}/dist" />
	<property name="build.dist.loginserver" location="${build.dist}/loginserver" />
	<property name="build.dist.gameserver" location="${build.dist}/gameserver" />

	<path id="classpath">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<pathconvert property="jar.list" pathsep=" " refid="classpath">
		<mapper type="flatten" />
	</pathconvert>

	<property name="build.classpath" refid="classpath"/>

	<tstamp>
		<format property="build.tstamp" pattern="yyyy.MM.dd HH:mm" />
	</tstamp>

	<target name="clean" description="Remove the output directories.">

		<delete dir="${build}" />

	</target>

	<target name="init" description="Create the output directories.">

		<mkdir dir="${build}" />

	</target>

	<target name="compile-commons" depends="init">

		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />

		<javac srcdir="${src.commons}" destdir="${build.classes}" debug="${debug}" source="1.6" target="1.6" encoding="UTF-8" nowarn="off" classpath="${build.classpath}">
			<compilerarg value="-Xlint:all" />
		</javac>

	</target>

	<target name="commons-jar" depends="compile-commons">

		<exec dir="${basedir}" executable="svnversion" outputproperty="build.revision" failifexecutionfails="false">
			<arg line="-n ${src.commons}" />
		</exec>

		<jar destfile="${build}/commons.jar">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Implementation-Build" value="${build.revision}" />
				<attribute name="Implementation-Version" value="${build.version}" />
			</manifest>
		</jar>

	</target>

	<target name="compile-gameserver" depends="commons-jar">

		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />

		<javac srcdir="${src.gameserver}" destdir="${build.classes}" debug="${debug}" source="1.6" target="1.6" encoding="UTF-8" nowarn="off" classpath="${build.classpath}:${build}/commons.jar">
			<compilerarg value="-Xlint:all" />
		</javac>

	</target>

	<target name="gameserver-jar" depends="compile-gameserver">

		<exec dir="${basedir}" executable="svnversion" outputproperty="build.revision" failifexecutionfails="false">
			<arg line="-n ${src.gameserver}" />
		</exec>

		<jar destfile="${build}/gameserver.jar">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Main-Class" value="l2p.gameserver.GameServer" />
				<attribute name="Class-Path" value="${jar.list} commons.jar" />
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Implementation-Build" value="${build.revision}" />
				<attribute name="Implementation-Version" value="${build.version}" />
			</manifest>
		</jar>

	</target>

	<target name="gameserver" depends="gameserver-jar">

		<mkdir dir="${build.dist}" />
		<mkdir dir="${build.dist.gameserver}" />
		<mkdir dir="${build.dist.gameserver}/log" />

		<sync todir="${build.dist.gameserver}">
		  <fileset dir="${dist}/gameserver"/>
		</sync>
		
		<copy todir="${build.dist.gameserver}">
			<fileset dir="${build}">
				<include name="gameserver.jar" />
				<include name="commons.jar" />
			</fileset>
		</copy>

		<copy todir="${build.dist.gameserver}">
			<fileset dir="${lib}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<fixcrlf srcdir="${build.dist.gameserver}" eol="lf" eof="remove" includes="**/*.sh">
		</fixcrlf>

		<fixcrlf srcdir="${build.dist.gameserver}" eol="crlf" eof="remove" includes="**/*.bat">
		</fixcrlf>

	</target>

	<target name="compile-loginserver" depends="commons-jar">

		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />

		<javac srcdir="${src.loginserver}" destdir="${build.classes}" debug="${debug}" source="1.6" target="1.6" encoding="UTF-8" nowarn="off" classpath="${build.classpath}:${build}/commons.jar">
			<compilerarg value="-Xlint:all" />
		</javac>

	</target>

	<target name="loginserver-jar" depends="compile-loginserver">

		<exec dir="${basedir}" executable="svnversion" outputproperty="build.revision" failifexecutionfails="false">
			<arg line="-n ${src.loginserver}" />
		</exec>

		<jar destfile="${build}/loginserver.jar">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Main-Class" value="l2p.loginserver.LoginServer" />
				<attribute name="Class-Path" value="${jar.list} commons.jar" />
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Implementation-Build" value="${build.revision}" />
				<attribute name="Implementation-Version" value="${build.version}" />
			</manifest>
		</jar>

	</target>

	<target name="loginserver" depends="loginserver-jar">

		<mkdir dir="${build.dist}" />
		<mkdir dir="${build.dist.loginserver}" />
		<mkdir dir="${build.dist.loginserver}/log" />

		<copy todir="${build.dist.loginserver}">
			<fileset dir="${build}">
				<include name="loginserver.jar" />
				<include name="commons.jar" />
			</fileset>
		</copy>

		<copy todir="${build.dist.loginserver}">
			<fileset dir="${lib}">
				<include name="*.jar" />
			</fileset>
		</copy>

		<copy todir="${build.dist.loginserver}">
		  <fileset dir="${dist}/loginserver"/>
		</copy>

		<fixcrlf srcdir="${build.dist.loginserver}" eol="lf" eof="remove" includes="**/*.sh">
		</fixcrlf>

		<fixcrlf srcdir="${build.dist.loginserver}" eol="crlf" eof="remove" includes="**/*.bat">
		</fixcrlf>

	</target>	
	
	<target name="dist" depends="loginserver, gameserver">
		
		<zip destfile="${build}/L2pServer-dist.zip" basedir="${build.dist}" />	
		
	</target>
</project>