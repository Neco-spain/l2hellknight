<?xml version="1.0" encoding="UTF-8"?>
<project name="RebellionTeam" default="dist" basedir=".">
	<property name="build.version" value="1.0" />
	<property name="debug" value="on" />
	<property name="src.gameserver" location="java/l2r/gameserver" />
	<property name="src.loginserver" location="java/l2r/loginserver" />
	<property name="src.commons" location="java/l2r/commons" />
	<property name="src.scripts" location="data"/>
	<property name="dist" location="dist" />
	<property name="lib" location="lib" />

	<property name="build" location="build" />
	<property name="build.classes" location="${build}/classes" />

	<property name="build.dist" location="${build}/dist" />
	<property name="build.dist.loginserver" location="${build.dist}/loginserver" />
	<property name="build.dist.gameserver" location="${build.dist}/gameserver" />
	<property name="build.dist.tools" location="${build.dist}/tools" />

	<path id="classpath">
		<fileset dir="${lib}">
			<include name="**/*.jar" />
		</fileset>
	</path>

	<pathconvert property="jar.list" pathsep=" " refid="classpath">
		<mapper type="flatten" />
	</pathconvert>

	<property name="build.classpath" refid="classpath"/>

	<tstamp>
		<format property="build.tstamp" pattern="yyyy.MM.dd HH:mm" />
	</tstamp>

	<target name="clean" description="Remove the output directories.">

		<delete dir="${build}" />

	</target>

	<target name="init" description="Create the output directories.">

		<mkdir dir="${build}" />

	</target>

	<target name="compile-commons" depends="init">
		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />

		<javac srcdir="${src.commons}" destdir="${build.classes}" optimize="on" debug="${debug}" source="1.7" target="1.7" includeantruntime="false" encoding="UTF-8" nowarn="off" classpath="${build.classpath}">
			<compilerarg value="-Xlint:all,-serial" />
		</javac>
	</target>

	<target name="commons-jar" depends="compile-commons">

		<exec dir="${basedir}" executable="svnversion" outputproperty="build.revision" failifexecutionfails="false">
			<arg line="-n ${src.commons}" />
		</exec>

		<jar destfile="${build}/l2r-commons.jar">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Implementation-Build" value="${build.revision}" />
				<attribute name="Implementation-Version" value="${build.version}" />
			</manifest>
		</jar>
	</target>

	<target name="compile-gameserver" depends="commons-jar">
		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />
		<javac srcdir="${src.gameserver}" destdir="${build.classes}" optimize="on" debug="${debug}" source="1.7" target="1.7" includeantruntime="false" encoding="UTF-8" nowarn="off" classpath="${build.classpath}:${build}/l2r-commons.jar:${build}/l2r-loginserver.jar">
			<!--<compilerarg value="-Xlint:deprecation" /> -->
			<compilerarg value="-Xlint:all,-serial" />
		</javac>
	</target>

	<target name="gameserver-jar" depends="compile-gameserver">

		<exec dir="${basedir}" executable="svnversion" outputproperty="build.revision" failifexecutionfails="false">
			<arg line="-n ${src.gameserver}" />
		</exec>
		<jar destfile="${build}/l2r-gameserver.jar">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Main-Class" value="l2r.gameserver.GameServer" />
				<attribute name="Class-Path" value=". "/>
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Implementation-Build" value="${build.revision}" />
				<attribute name="Implementation-Version" value="${build.version}" />
			</manifest>
		</jar>
	</target>

	<target name="gameserver" depends="gameserver-jar">
		<mkdir dir="${build.dist}" />
		<mkdir dir="${build.dist.tools}" />
		<mkdir dir="${build.dist.gameserver}" />
		<mkdir dir="${build.dist.gameserver}/geodata" />
		<mkdir dir="${build.dist.gameserver}/log" />
		
		<copy todir="${build.dist}/gameserver/libs">
			<fileset dir="${build}">
				<include name="l2r-gameserver.jar" />
			</fileset>
		</copy>

		<fixcrlf srcdir="${build.dist.gameserver}" eol="lf" eof="remove" includes="**/*.sh">
		</fixcrlf>

		<fixcrlf srcdir="${build.dist.gameserver}" eol="crlf" eof="remove" includes="**/*.bat">
		</fixcrlf>
		
		<delete dir="${build.classes}" />

		<copy todir="${build.dist.gameserver}" preservelastmodified="true">
			<fileset dir="${dist}/gameserver">
				<include name="**/*.*"/>
				<exclude name="/data/scripts/**/*" />
			</fileset>
		</copy>

		<copy todir="${build.dist.tools}" preservelastmodified="true">
			<fileset dir="${dist}/tools">
				<include name="**/*.*"/>
			</fileset>
		</copy>
	</target>

	<target name="scripts" depends="scripts-jar">
		<copy todir="${build.dist}/gameserver/libs">
			<fileset dir="${build}">
				<include name="l2r-scripts.jar" />
			</fileset>
		</copy>
	</target>

    <target name="compile-scripts" depends="commons-jar" description="Compile the source.">
		<copy todir="${lib}">
			<fileset dir="${build}">
				<include name="l2r-gameserver.jar" />
				<include name="l2r-commons.jar" />
			</fileset>
		</copy>
		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />
		<javac destdir="${build.classes}" optimize="on" debug="on" source="1.7" target="1.7" encoding="UTF-8" includeantruntime="false" nowarn="off">
			<compilerarg value="-Xlint:unchecked"></compilerarg>
			<src path="${src.scripts}"/>
			<classpath refid="classpath"/>
		</javac>
    </target>

	<target name="scripts-jar" depends="compile-scripts">
         <jar destfile="${build}/l2r-scripts.jar" level="9">
            <fileset dir="${build.classes}"/>
			<manifest>
				<attribute name="Build-By" value="${user.name}"/>
				<attribute name="Build-Date" value="${build.tstamp}"/>
				<attribute name="Main-Class" value="l2r.gameserver.GameServer"/>
				<attribute name="Class-Path" value=". "/>
			</manifest>			
        </jar>
	</target>

	<target name="compile-loginserver" depends="commons-jar">

		<delete dir="${build.classes}" />
		<mkdir dir="${build.classes}" />

		<javac srcdir="${src.loginserver}" optimize="on" destdir="${build.classes}" debug="${debug}" source="1.7" target="1.7" includeantruntime="false" encoding="UTF-8" nowarn="off" classpath="${build.classpath}:${build}/l2r-commons.jar">
			<compilerarg value="-Xlint:all,-serial" />
		</javac>
	</target>

	<target name="loginserver-jar" depends="compile-loginserver">

		<exec dir="${basedir}" executable="svnversion" outputproperty="build.revision" failifexecutionfails="false">
			<arg line="-n ${src.loginserver}" />
		</exec>

		<jar destfile="${build}/l2r-loginserver.jar">
			<fileset dir="${build.classes}" />
			<manifest>
				<attribute name="Main-Class" value="l2r.loginserver.loginserver" />
				<attribute name="Class-Path" value="${jar.list} l2r-commons.jar" />
				<attribute name="Build-By" value="${user.name}" />
				<attribute name="Build-Date" value="${build.tstamp}" />
				<attribute name="Implementation-Build" value="${build.revision}" />
				<attribute name="Implementation-Version" value="${build.version}" />
			</manifest>
		</jar>

	</target>

	<target name="loginserver" depends="loginserver-jar">

		<mkdir dir="${build.dist}" />
		<mkdir dir="${build.dist.loginserver}" />
		<mkdir dir="${build.dist.loginserver}/log" />
		<mkdir dir="${build.dist.loginserver}/config" />

		<copy todir="${build.dist}/loginserver">
			<fileset dir="${dist}/loginserver">
				<include name="**/*.*"/>
			</fileset>
		</copy>
		
		<copy todir="${build.dist}/loginserver/libs">
			<fileset dir="${build}">
				<include name="l2r-loginserver.jar" />
				<include name="l2r-commons.jar" />
			</fileset>
		</copy>
		<copy todir="${build.dist}/loginserver/libs">
			<fileset dir="${lib}">
				<include name="*.jar" />
				<exclude name="/7-Zip" />
				<exclude name="/7-Zip/*" />
				<exclude name="l2r-loginserver.jar" />
				<exclude name="7z.jar" />
			</fileset>
		</copy>
		<copy todir="${build.dist}/gameserver/libs">
			<fileset dir="${lib}">
				<include name="*.jar" />
				<exclude name="/7-Zip" />
				<exclude name="/7-Zip/*" />
				<exclude name="l2r-gameserver.jar" />
				<exclude name="7z.jar" />
			</fileset>
		</copy>
		<fixcrlf srcdir="${build.dist.loginserver}" eol="lf" eof="remove" includes="**/*.sh">
		</fixcrlf>

		<fixcrlf srcdir="${build.dist.loginserver}" eol="crlf" eof="remove" includes="**/*.bat">
		</fixcrlf>

	</target>	
	
	<target name="dist" depends="loginserver, gameserver, scripts">	
		<exec executable="${lib}/7-Zip/7z.exe" failifexecutionfails="true" outputproperty="sevenzip_output">
			<arg line="a -mx=9 -m0=LZMA ${build}/l2r-server.7z ${build.dist}/*"/>
		</exec>
	</target>
</project>