<?xml version="1.0" encoding="UTF-8"?>
<project name="L2Brick_Server" default="dist" basedir=".">

	<property name="src" location="java" />
	<property name="lib" location="lib" />
	<property name="build" location="build" />
	<property name="build.classes" location="${build}/classes" />
	<property name="build.dist" location="${build}/dist" />
	<property name="build.dist.login" location="${build.dist}/login" />
	<property name="build.dist.game" location="${build.dist}/gameserver" />
	<property name="build.dist.libs" location="${build.dist}/libs" />
	<property name="build.dist.languages" location="${build.dist}/languages" />
	<property name="build.dist.images" location="${build.dist}/images" />
	<property name="build.dist.doc" location="${build.dist}/doc" />

	<path id="classpath">
		<fileset dir="${lib}">
			<include name="c3p0-0.9.2-pre1.jar" />
			<include name="jython.jar" />
			<include name="jython-engine.jar" />
			<include name="javolution-5.5.1.jar" />
			<include name="mchange-commons-0.2.jar" />
			<include name="mmocore.jar" />
			<include name="trove-2.1.0.jar" />
			<include name="netcon.jar" />
            <include name="jogl.jar" />
          	<include name="worldwind.jar" />
		</fileset>
	</path>

	<target name="verifyRequirements" description="Checks if the necessary requirements for building L2Brick are fulfilled">
		<available classname="java.lang.AutoCloseable" property="JDK7.present" />
		<fail unless="JDK7.present" message="JDK 7 or greater is required." />
	</target>

	<target name="init" depends="clean, verifyRequirements" description="Create the output directories.">
		<mkdir dir="${build}" />
		<mkdir dir="${build.classes}" />
		<mkdir dir="${build.dist}" />
		<mkdir dir="${build.dist.login}" />
		<mkdir dir="${build.dist.game}" />
	</target>

	<target name="compile" depends="version" description="Compile the source.">
		<javac destdir="${build.classes}" optimize="on" debug="on" source="1.7" target="1.7" nowarn="off">
			<src path="${src}" />
			<classpath refid="classpath" />
		</javac>
	</target>

	<target name="jar" depends="compile" description="Create the jar file">
		<jar destfile="${build}/l2brick_server.jar">
			<fileset dir="${build.classes}">
				<exclude name="**/loginserver/**" />
				<exclude name="**/accountmanager/**" />
				<exclude name="**/gsregistering/**" />
			</fileset>
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Built-Date" value="${build.tstamp}" />
				<attribute name="Implementation-Version" value="${l2brick.revision}" />
				<attribute name="Implementation-URL" value="http://l2brick.funsite.cz/" />
			</manifest>
		</jar>
		<jar destfile="${build}/l2brick_login.jar">
			<fileset dir="${build.classes}">
				<exclude name="**/gameserver/**" />
			</fileset>
			<manifest>
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Built-Date" value="${build.tstamp}" />
				<attribute name="Implementation-Version" value="${l2brick.revision}" />
				<attribute name="Implementation-URL" value="http://l2brick.funsite.cz/" />
			</manifest>
		</jar>
		<copy todir="${build.dist.login}">
			<fileset dir="${build}">
				<include name="l2brick_login.jar" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}">
			<fileset dir="${build}">
				<include name="l2brick_server.jar" />
			</fileset>
		</copy>
	</target>

	<target name="jarsrc" depends="jar">
		<mkdir dir="${build.dist.libs}" />
		<jar destfile="${build.dist.libs}/l2brick_server-src.jar">
			<fileset dir="${src}" >
				<exclude name="/config/**" />
				<exclude name="**.cfg" />
			</fileset>
		</jar>
	</target>

	<target name="dist" depends="jarsrc">
		<copy todir="${build.dist.login}">
			<fileset dir="${src}">
				<include name="log.cfg" />
				<include name="banned_ip.cfg" />
				<include name="console.cfg" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}">
			<fileset dir="${src}">
				<include name="log.cfg" />
				<include name="console.cfg" />
			</fileset>
		</copy>
		<copy todir="${build.dist.libs}">
			<fileset dir="${src}/../lib">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.dist.languages}">
			<fileset dir="${src}/../languages" />
		</copy>
		<copy todir="${build.dist.images}">
			<fileset dir="${src}/../images" />
		</copy>
		<copy todir="${build.dist.doc}">
			<fileset dir="${basedir}">
				<include name="changes.txt" />
				<include name="LICENSE.txt" />
				<include name="README.txt" />
			</fileset>
		</copy>
		<copy todir="${build.dist.doc}">
			<fileset dir="${src}/../lib">
				<include name="*LICENSE*" />
			</fileset>
		</copy>
		<copy todir="${build.dist.login}">
			<fileset dir="dist">
				<include name="startAccountManager.*" />
				<include name="startSQLAccountManager.*" />
				<include name="LoginServer_loop.sh" />
				<include name="startLoginServer.*" />
				<include name="RegisterGameServer.*" />
				<include name="GSRegister.exe" />
				<include name="L2JConfig.exe" />
				<include name="L2JConfig.sh" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}">
			<fileset dir="dist">
				<include name="GameServer_loop.sh" />
				<include name="startGameServer.*" />
				<include name="L2JConfig.exe" />
				<include name="L2JConfig.sh" />
				<include name="hibernate.cfg.xml" />
			</fileset>
		</copy>
		<fixcrlf srcdir="${build.dist.game}" eol="lf" eof="remove" includes="**/*.sh" />
		<fixcrlf srcdir="${build.dist.login}" eol="lf" eof="remove" includes="**/*.sh" />
		<fixcrlf srcdir="${build.dist.game}" eol="crlf" eof="remove" includes="**/*.bat" />
		<fixcrlf srcdir="${build.dist.login}" eol="crlf" eof="remove" includes="**/*.bat" />
		<mkdir dir="${build.dist.game}/log" />
		<mkdir dir="${build.dist.login}/log" />
		<mkdir dir="${build.dist.game}/config" />
		<mkdir dir="${build.dist.game}/config/GrandBoss" />
		<mkdir dir="${build.dist.game}/config/InGame" />
		<mkdir dir="${build.dist.game}/config/InGameEvents" />
		<mkdir dir="${build.dist.game}/config/ServerSettings" />
		<mkdir dir="${build.dist.game}/config/Scripts" />
		<mkdir dir="${build.dist.login}/config" />
		<copy todir="${build.dist.game}/config">
			<fileset dir="java/config">
				<include name="*.properties" />
				<include name="*.xml" />
				<include name="*.xsd" />
				<include name="*.txt" />
				<exclude name="loginserver.properties" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}/config/GrandBoss">
			<fileset dir="java/config/GrandBoss">
				<include name="*.properties" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}/config/InGame">
			<fileset dir="java/config/InGame">
				<include name="*.properties" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}/config/InGameEvents">
			<fileset dir="java/config/InGameEvents">
				<include name="*.properties" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}/config/ServerSettings">
			<fileset dir="java/config/ServerSettings">
				<include name="*.properties" />
				<include name="*.xml" />
				<include name="*.xsd" />
			</fileset>
		</copy>
		<copy todir="${build.dist.game}/config/Scripts">
			<fileset dir="java/config/Scripts">
				<include name="*.properties" />
				<include name="*.xml" />
				<include name="*.xsd" />
			</fileset>
		</copy>
		

		<copy todir="${build.dist.login}/config">
			<fileset dir="java/config">
				<include name="loginserver.properties" />
				<include name="mmo.properties" />
				<include name="telnet.properties" />
			</fileset>
		</copy>
		<mkdir dir="${build.dist.game}/data" />
		<copy todir="${build.dist.game}/data">
			<fileset dir="data">
				<include name="*.csv" />
				<include name="*.txt" />
			</fileset>
		</copy>
		<mkdir dir="${build.dist.game}/data/geodata" />
		<copy todir="${build.dist.game}/data/geodata">
			<fileset dir="data/geodata">
				<include name="*.txt" />
				<include name="*.l2j" />
			</fileset>
		</copy>
		<mkdir dir="${build.dist.game}/data/pathnode" />
		<copy todir="${build.dist.game}/data/pathnode">
			<fileset dir="data/pathnode">
				<include name="*.txt" />
				<include name="*.pn" />
			</fileset>
		</copy>
		<zip destfile="${build}/L2Brick_Server.zip" basedir="${build.dist}" />
	</target>

	<target name="version" depends="init" description="Create l2brick-version.properties file">
		<tstamp>
			<format property="build.tstamp" pattern="yyyyMMdd_HHmm" />
		</tstamp>
		<exec dir="." executable="svnversion" outputproperty="l2brick.revision" failifexecutionfails="false">
			<arg line="-n ." />
		</exec>
		<concat destfile="${build.dist.game}/config/l2brick-version.properties">
			version=${l2brick.revision}
			builddate=${build.tstamp}
			detailed info:
		</concat>
		<concat destfile="${build.dist.game}/config/l2brick-version.properties" append="true">
			<filelist dir="${src}/../.svn/" files="entries" />
			<filterchain>
				<prefixlines prefix="          " />
				<headfilter lines="8" skip="4" />
				<tokenfilter>
					<ignoreblank />
				</tokenfilter>
			</filterchain>
		</concat>
	</target>

	<target name="clean" description="Remove the output directories">
		<delete dir="${build}" />
	</target>
</project>