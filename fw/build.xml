<?xml version="1.0" encoding="UTF-8"?>
<project name="FW-Dev" default="dist" basedir=".">

    <property name="build.version" value="2.1"/>
    <property name="vendor.name" value="http://l2jserver.info"/>

    <property name="debug" value="on"/>

    <property name="src.gameserver" location="gameserver/src/main/java"/>
    <property name="src.loginserver" location="loginserver/src/main/java"/>
    <property name="src.commons" location="commons/src/main/java"/>
    <property name="src.scripts" location="dist/gameserver/data/scripts"/>

    <property name="dist" location="dist"/>
    <property name="lib" location="lib"/>

    <property name="build" location="build"/>
    <property name="build.classes" location="${build}/classes"/>

    <property name="build.dist" location="${build}/dist"/>
    <property name="build.dist.loginserver" location="${build.dist}/loginserver"/>
    <property name="build.dist.gameserver" location="${build.dist}/gameserver"/>

    <buildnumber file="./build.properties"/>

    <path id="classpath">
        <fileset dir="${lib}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <pathconvert property="jar.list" pathsep=" " refid="classpath">
        <mapper type="flatten"/>
    </pathconvert>

    <property name="build.classpath" refid="classpath"/>

    <tstamp>
        <format property="build.tstamp" pattern="yyyy.MM.dd HH:mm"/>
    </tstamp>

    <target name="clean" description="Remove the output directories.">

        <delete dir="${build}"/>

    </target>

    <target name="init" description="Create the output directories.">

        <mkdir dir="${build}"/>

    </target>

    <target name="compile-commons" depends="init">

        <delete dir="${build.classes}"/>
        <mkdir dir="${build.classes}"/>

        <javac srcdir="${src.commons}" destdir="${build.classes}" debug="${debug}" source="1.6" target="1.6"
               encoding="UTF-8" nowarn="off" classpath="${build.classpath}">
            <compilerarg value="-Xlint:all"/>
        </javac>

    </target>

    <target name="commons-jar" depends="compile-commons">

        <exec dir="${src.commons}" executable="svnversion" outputproperty="build.revision"
              failifexecutionfails="false"/>

        <jar destfile="${build}/commons.jar" level="9">
            <fileset dir="${build.classes}"/>
            <manifest>
                <attribute name="Build-By" value="${user.name}"/>
                <attribute name="Build-Date" value="${build.tstamp}"/>
                <attribute name="Implementation-Build" value="${build.revision}"/>
                <attribute name="Implementation-Version" value="${build.version}"/>
                <attribute name="Implementation-Number" value="${build.number}"/>
            </manifest>
        </jar>

    </target>

    <target name="compile-gameserver" depends="commons-jar">

        <delete dir="${build.classes}"/>
        <mkdir dir="${build.classes}"/>

        <javac srcdir="${src.gameserver}" destdir="${build.classes}" debug="${debug}" source="1.6" target="1.6"
               encoding="UTF-8" nowarn="off" classpath="${build.classpath}:${build}/commons.jar">
            <compilerarg value="-Xlint:all"/>
        </javac>

    </target>

    <target name="gameserver-jar" depends="compile-gameserver">

        <exec dir="${src.gameserver}" executable="svnversion" outputproperty="build.revision"
              failifexecutionfails="false"/>

        <jar destfile="${build}/gameserver.jar" level="9">
            <fileset dir="${build.classes}"/>
            <manifest>
                <attribute name="Main-Class" value="l2p.gameserver.GameServer"/>
                <attribute name="Class-Path" value="${jar.list} commons.jar"/>
                <attribute name="Vendor" value="${vendor.name}"/>
                <attribute name="Build-By" value="${user.name}"/>
                <attribute name="Build-Date" value="${build.tstamp}"/>
                <attribute name="Implementation-Build" value="${build.revision}"/>
                <attribute name="Implementation-Version" value="${build.version}"/>
                <attribute name="Implementation-Number" value="${build.number}"/>
            </manifest>
        </jar>

    </target>

    <target name="compile-scripts" depends="gameserver-jar">

        <delete dir="${build.classes}"/>
        <mkdir dir="${build.classes}"/>

        <javac srcdir="${src.scripts}" destdir="${build.classes}" debug="${debug}" source="1.6" target="1.6"
               encoding="UTF-8" nowarn="off"
               classpath="${build.classpath}:${build}/commons.jar:${build}/gameserver.jar">
            <compilerarg value="-Xlint:all"/>
        </javac>
    </target>

    <target name="scripts-jar" depends="compile-scripts">

        <exec dir="${src.scripts}" executable="svnversion" outputproperty="build.revision"
              failifexecutionfails="false"/>

        <jar destfile="${build}/scripts.jar" level="9">
            <fileset dir="${build.classes}"/>
            <manifest>
                <attribute name="Class-Path" value="${jar.list} commons.jar"/>
                <attribute name="Vendor" value="${vendor.name}"/>
                <attribute name="Build-By" value="${user.name}"/>
                <attribute name="Build-Date" value="${build.tstamp}"/>
                <attribute name="Implementation-Build" value="${build.revision}"/>
                <attribute name="Implementation-Version" value="${build.version}"/>
                <attribute name="Implementation-Number" value="${build.number}"/>
            </manifest>
        </jar>
    </target>

    <target name="gameserver" depends="gameserver-jar, scripts-jar">

        <mkdir dir="${build.dist}"/>
        <mkdir dir="${build.dist.gameserver}"/>
        <mkdir dir="${build.dist.gameserver}/log"/>

        <sync todir="${build.dist.gameserver}">
            <fileset dir="${dist}/gameserver">
                <exclude name="**/*.java"/>
            </fileset>
        </sync>

        <copy todir="${build.dist.gameserver}">
            <fileset dir="${build}">
                <include name="gameserver.jar"/>
                <include name="scripts.jar"/>
                <include name="commons.jar"/>
            </fileset>
        </copy>

        <copy todir="${build.dist.gameserver}">
            <fileset dir="${lib}">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <fixcrlf srcdir="${build.dist.gameserver}" eol="lf" eof="remove" includes="**/*.sh">
        </fixcrlf>

        <fixcrlf srcdir="${build.dist.gameserver}" eol="crlf" eof="remove" includes="**/*.bat">
        </fixcrlf>

    </target>

    <target name="compile-loginserver" depends="commons-jar">

        <delete dir="${build.classes}"/>
        <mkdir dir="${build.classes}"/>

        <javac srcdir="${src.loginserver}" destdir="${build.classes}" debug="${debug}" source="1.6" target="1.6"
               encoding="UTF-8" nowarn="off" classpath="${build.classpath}:${build}/commons.jar">
            <compilerarg value="-Xlint:all"/>
        </javac>

    </target>

    <target name="loginserver-jar" depends="compile-loginserver">

        <exec dir="${src.loginserver}" executable="svnversion" outputproperty="build.revision"
              failifexecutionfails="false"/>

        <jar destfile="${build}/loginserver.jar" level="9">
            <fileset dir="${build.classes}"/>
            <manifest>
                <attribute name="Main-Class" value="l2p.loginserver.LoginServer"/>
                <attribute name="Class-Path" value="${jar.list} commons.jar"/>
                <attribute name="Build-By" value="${user.name}"/>
                <attribute name="Build-Date" value="${build.tstamp}"/>
                <attribute name="Implementation-Build" value="${build.revision}"/>
                <attribute name="Implementation-Version" value="${build.version}"/>
                <attribute name="Implementation-Number" value="${build.number}"/>
            </manifest>
        </jar>

    </target>

    <target name="loginserver" depends="loginserver-jar">

        <mkdir dir="${build.dist}"/>
        <mkdir dir="${build.dist.loginserver}"/>
        <mkdir dir="${build.dist.loginserver}/log"/>

        <copy todir="${build.dist.loginserver}">
            <fileset dir="${build}">
                <include name="loginserver.jar"/>
                <include name="commons.jar"/>
            </fileset>
        </copy>

        <copy todir="${build.dist.loginserver}">
            <fileset dir="${lib}">
                <include name="*.jar"/>
            </fileset>
        </copy>

        <copy todir="${build.dist.loginserver}">
            <fileset dir="${dist}/loginserver"/>
        </copy>

        <fixcrlf srcdir="${build.dist.loginserver}" eol="lf" eof="remove" includes="**/*.sh">
        </fixcrlf>

        <fixcrlf srcdir="${build.dist.loginserver}" eol="crlf" eof="remove" includes="**/*.bat">
        </fixcrlf>

    </target>

    <target name="dist" depends="loginserver, gameserver"/>

    <target name="protect" depends="loginserver, gameserver">
        <copy todir="${build.dist}">
            <fileset dir=".">
                <include name="CatsByteGuard.jar"/>
                <include name="loader.jar"/>
                <include name="Protect.bat"/>
                <include name="libloader.so"/>
                <include name="libloaderx64.so"/>
                <include name="loader.dll"/>
                <include name="loaderx64.dll"/>
                <include name="Protect.bat"/>
            </fileset>
        </copy>

        <pathconvert property="loginpath.l" pathsep=" ">
            <mapper>
                <chainedmapper>
                    <flattenmapper/>
                    <globmapper from="*.jar" to="loginserver/*.jar"/>
                </chainedmapper>
            </mapper>
            <fileset dir="${build.dist.loginserver}">
                <include name="*.jar"/>
            </fileset>
        </pathconvert>

        <pathconvert property="gameserver.l" pathsep=" ">
            <mapper>
                <chainedmapper>
                    <flattenmapper/>
                    <globmapper from="*.jar" to="gameserver/*.jar"/>
                </chainedmapper>
            </mapper>
            <fileset dir="${build.dist.gameserver}">
                <include name="*.jar"/>
            </fileset>
        </pathconvert>

        <exec executable="cmd" dir="${build.dist}">
            <arg value="/c"/>
            <arg value="Protect.bat"/>
            <arg value="${loginpath.l}"/>
        </exec>
        <exec executable="cmd" dir="${build.dist}">
            <arg value="/c"/>
            <arg value="Protect.bat"/>
            <arg value="${gameserver.l}"/>
        </exec>

        <copy todir="${build.dist.loginserver}">
            <fileset dir=".">
                <include name="loader.jar"/>
                <include name="libloader.so"/>
                <include name="libloaderx64.so"/>
                <include name="loader.dll"/>
                <include name="loaderx64.dll"/>
            </fileset>
        </copy>
        <copy todir="${build.dist.gameserver}">
            <fileset dir=".">
                <include name="loader.jar"/>
                <include name="libloader.so"/>
                <include name="libloaderx64.so"/>
                <include name="loader.dll"/>
                <include name="loaderx64.dll"/>
            </fileset>
        </copy>
        <delete>
            <fileset dir="${build.dist}">
                <include name="CatsByteGuard.jar"/>
                <include name="Protect.bat"/>
                <include name="loader.jar"/>
                <include name="libloader.so"/>
                <include name="libloaderx64.so"/>
                <include name="loader.dll"/>
                <include name="loaderx64.dll"/>
            </fileset>
        </delete>
    </target>

    <target name="redist" depends="clean, dist, protect">
        <delete dir="${build.dist.loginserver}/log"/>
        <delete>
            <fileset dir="${build.dist.loginserver}">
                <include name="**/*.iml"/>
            </fileset>
            <fileset dir="${build.dist.loginserver}/config">
                <exclude name="default/**/*.*"/>
            </fileset>
        </delete>

        <delete dir="${build.dist.gameserver}/log"/>
        <delete>
            <fileset dir="${build.dist.gameserver}">
                <include name="**/*.iml"/>
            </fileset>
            <fileset dir="${build.dist.gameserver}/config">
                <include name="**/*.*"/>
                <exclude name="default/**/*.*"/>
            </fileset>
            <fileset dir="${build.dist.gameserver}/geodata">
                <include name="**/*.l2j"/>
                <include name="**/*.txt"/>
            </fileset>
        </delete>

        <zip destfile="${build}/L2FWServer-v${build.version}-b${build.number}-r${build.revision}.zip"
             basedir="${build.dist}" level="9"/>
    </target>
</project>