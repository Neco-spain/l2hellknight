# ---------------------------------------------------------------------------
# Optimization
# ---------------------------------------------------------------------------
# Items on ground management.
# Allow players to drop items on the ground.
# Default: True
AllowDiscardItem = True

# Delete dropped reward items from world after a specified amount of seconds. Disabled = 0.
# Default: 600
AutoDestroyDroppedItemAfter = 600

# Time in secs after which dropped herb will be auto-destroyed
# Default: 60
AutoDestroyHerbTime = 60

# List of item id that will not be destroyed (separated by "," like 57,5575,6673).
# Notes:
#	Make sure the lists do NOT CONTAIN trailing spaces or spaces between the numbers!
#	Items on this list will be protected regardless of the following options.
# Default: 0
ListOfProtectedItems = 0

# Cleans up the server database on startup.
# The bigger the database is, the longer it will take to clean up the database(the slower the server will start).
# Sometimes this ends up with 0 elements cleaned up, and a lot of wasted time on the server startup.
# If you want a faster server startup, set this to 'false', but its recommended to clean up the database from time to time.
# Default: True
DatabaseCleanUp = True

# The time before a database connection closes (in miliseconds)
# If a query takes longer to execute than the time defined here, the server will throw "Unclosed Connection!" error.
# If you get often this error message, try increasing this.
# Default: 60000ms
ConnectionCloseTime = 60000

# This is the interval (in minutes), that the gameserver will update a players information such as location.
# The higher you set this number, there will be less character information saving so you will have less accessessing of the database and your hard drive(s).
# The lower you set this number, there will be more frequent character information saving so you will have more access to the database and your hard drive(s).
# A value of 0 disables periodic saving.
# Independent of this setting the character is always saved after leaving the world.
# Default: 15
CharacterDataStoreInterval = 15

# This enables the server to only update items when saving the character.
# Enabling this greatly reduces DB usage and improves performance.
# WARNING: This option causes item loss during crashes.
# Default: False
LazyItemsUpdate = False

# When enabled, this forces (even if using lazy item updates) the items owned by the character to be updated into DB when saving its character.
# Default: False
UpdateItemsOnCharStore = False

# Also delete from world misc. items dropped by players (all except equip-able items).
# Notes:
#	Works only if AutoDestroyDroppedItemAfter is greater than 0.
# Default: False
DestroyPlayerDroppedItem = False

# Destroy dropped equipable items (armor, weapon, jewelry).
# Notes:
#	Works only if DestroyPlayerDroppedItem = True
# Default: False
DestroyEquipableItem = False

# Save dropped items into the database for restoring after restart.
# Default: False
SaveDroppedItem = False

# Enable/Disable the emptying of the stored dropped items table after items are loaded into memory (safety setting).
# If the server crashed before saving items, on next start old items will be restored and players may already have picked up some of them so this will prevent duplicates.
# Default: False
EmptyDroppedItemTableAfterLoad = False

# Time interval in minutes to save in DB items on ground. Disabled = 0.
# Notes:
#	If SaveDroppedItemInterval is disabled, items will be saved into the database only at server shutdown.
# Default: 60
SaveDroppedItemInterval = 60

# Delete all saved items from the database on next restart?
# Notes:
#	Works only if SaveDroppedItem = False.
# Default: False
ClearDroppedItemTable = False

# Delete invalid quest from players.
# Default: False
AutoDeleteInvalidQuestData = False

# Setting False can improve server performance on high rate/population servers.
# Default: True
PreciseDropCalculation = True

# Allow creating multiple non-stackable items at one time?
# Default: True
MultipleItemDrop = True

# Forces full item inventory packet to be sent for any item change.
# Notes:
#	This can increase network traffic 
# Default: False
ForceInventoryUpdate = False

# True = Load html's into cache only on first time html is requested.
# False = Load all html's into cache on server startup.
# Default: True
LazyCache = True

# Cache all character names in to memory on server startup
# False - names are loaded from Db when they are requested
# True - decrease Db usage , increase memory consumption
# Default: True
CacheCharNames = True

# Minimum and maximum variables in seconds for npc animation delay.
# You must keep MinNPCAnimation < = MaxNPCAnimation.
# Default: 10
MinNPCAnimation = 10

# Default: 20
MaxNPCAnimation = 20

# Default: 5
MinMonsterAnimation = 5

# Default: 20
MaxMonsterAnimation = 20

# Knownlist (the list of things a character sees) update method. Default is currently time based updating, which also makes it possible to use config options for guards to see moving monsters. Alternatively move based update can be used but guards cannot track mobs with that option but otherwise it should work well.
# Default: False
MoveBasedKnownlist = False

# Interval (in miliseconds) in which the knownlist does full updates.
# For move based updates its used for intermediate updates.
# WARNING!
#	Useful interval is between 300 - 2000. Too small value may kill your CPU, too high value may not update knownlists properly. The default value is chosen experimentally.
# Default: 1250
KnownListUpdateInterval = 1250

# Grid options: Grids can turn themselves on and off.  This also affects the loading and processing of all AI tasks and (in the future) geodata within this grid.
# Turn on for a grid with a person in it is immediate, but it then turns on the 8 neighboring grids based on the specified number of seconds.
# Turn off for a grid and neighbors occurs after the specified number of seconds have passed during which a grid has had no players in or in any of its neighbors.
# The always on option allows to ignore all this and let all grids be active at all times (not suggested).
# Default: False
GridsAlwaysOn = False

# Default: 1
GridNeighborTurnOnTime = 1

# Default: 90
GridNeighborTurnOffTime = 90

#####################
# Loading server ####
#####################
# This Setting only for java scripts in data/scripts
# Default: True
ShowLoadingScriptsLog = True

# Allow keyboard movement
# Default : false
AllowKeyboardMovement = false