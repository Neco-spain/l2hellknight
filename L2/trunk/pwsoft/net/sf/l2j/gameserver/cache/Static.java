package net.sf.l2j.gameserver.cache;

import net.sf.l2j.Config;
import net.sf.l2j.gameserver.datatables.CustomServerData;
import net.sf.l2j.gameserver.network.SystemMessageId;
import net.sf.l2j.gameserver.network.serverpackets.ActionFailed;
import net.sf.l2j.gameserver.network.serverpackets.CreatureSay;
import net.sf.l2j.gameserver.network.serverpackets.ExCloseMPCC;
import net.sf.l2j.gameserver.network.serverpackets.ExMailArrived;
import net.sf.l2j.gameserver.network.serverpackets.ExOpenMPCC;
import net.sf.l2j.gameserver.network.serverpackets.ExShowVariationCancelWindow;
import net.sf.l2j.gameserver.network.serverpackets.ExShowVariationMakeWindow;
import net.sf.l2j.gameserver.network.serverpackets.GameGuardQuery;
import net.sf.l2j.gameserver.network.serverpackets.GameGuardQueryEx;
import net.sf.l2j.gameserver.network.serverpackets.L2GameServerPacket;
import net.sf.l2j.gameserver.network.serverpackets.LeaveWorld;
import net.sf.l2j.gameserver.network.serverpackets.NpcHtmlMessage;
import net.sf.l2j.gameserver.network.serverpackets.PartySmallWindowDeleteAll;
import net.sf.l2j.gameserver.network.serverpackets.ServerClose;
import net.sf.l2j.gameserver.network.serverpackets.SystemMessage;
import net.sf.l2j.gameserver.network.serverpackets.TradePressOtherOk;
import net.sf.l2j.gameserver.network.serverpackets.TradePressOwnOk;

public final class Static
{
  public static final SystemMessage YOU_DO_NOT_MEET_CRITERIA_IN_ORDER_TO_CREATE_A_CLAN = SystemMessage.id(SystemMessageId.YOU_DO_NOT_MEET_CRITERIA_IN_ORDER_TO_CREATE_A_CLAN);
  public static final SystemMessage FAILED_TO_CREATE_CLAN = SystemMessage.id(SystemMessageId.FAILED_TO_CREATE_CLAN);
  public static final SystemMessage YOU_MUST_WAIT_XX_DAYS_BEFORE_CREATING_A_NEW_CLAN = SystemMessage.id(SystemMessageId.YOU_MUST_WAIT_XX_DAYS_BEFORE_CREATING_A_NEW_CLAN);
  public static final SystemMessage CLAN_NAME_INCORRECT = SystemMessage.id(SystemMessageId.CLAN_NAME_INCORRECT);
  public static final SystemMessage CLAN_NAME_TOO_LONG = SystemMessage.id(SystemMessageId.CLAN_NAME_TOO_LONG);
  public static final SystemMessage CLAN_CREATED = SystemMessage.id(SystemMessageId.CLAN_CREATED);
  public static final SystemMessage CLAN_HAS_DISPERSED = SystemMessage.id(SystemMessageId.CLAN_HAS_DISPERSED);
  public static final SystemMessage NO_GM_PROVIDING_SERVICE_NOW = SystemMessage.id(SystemMessageId.NO_GM_PROVIDING_SERVICE_NOW);
  public static final SystemMessage THE_MANOR_INFORMATION_HAS_BEEN_UPDATED = SystemMessage.id(SystemMessageId.THE_MANOR_INFORMATION_HAS_BEEN_UPDATED);
  public static final SystemMessage THE_AMOUNT_IS_NOT_SUFFICIENT_AND_SO_THE_MANOR_IS_NOT_IN_OPERATION = SystemMessage.id(SystemMessageId.THE_AMOUNT_IS_NOT_SUFFICIENT_AND_SO_THE_MANOR_IS_NOT_IN_OPERATION);
  public static final SystemMessage INVENTORY_LESS_THAN_80_PERCENT = SystemMessage.id(SystemMessageId.INVENTORY_LESS_THAN_80_PERCENT);
  public static final SystemMessage LOTTERY_TICKET_SALES_TEMP_SUSPENDED = SystemMessage.id(SystemMessageId.LOTTERY_TICKET_SALES_TEMP_SUSPENDED);
  public static final SystemMessage THIS_END_THE_PETITION_PLEASE_PROVIDE_FEEDBACK = SystemMessage.id(SystemMessageId.THIS_END_THE_PETITION_PLEASE_PROVIDE_FEEDBACK);
  public static final SystemMessage PETITION_APP_ACCEPTED = SystemMessage.id(SystemMessageId.PETITION_APP_ACCEPTED);
  public static final SystemMessage YOU_NOT_ENOUGH_ADENA = SystemMessage.id(SystemMessageId.YOU_NOT_ENOUGH_ADENA);
  public static final SystemMessage THE_MANOR_SYSTEM_IS_CURRENTLY_UNDER_MAINTENANCE = SystemMessage.id(SystemMessageId.THE_MANOR_SYSTEM_IS_CURRENTLY_UNDER_MAINTENANCE);
  public static final SystemMessage A_MANOR_CANNOT_BE_SET_UP_BETWEEN_6_AM_AND_8_PM = SystemMessage.id(SystemMessageId.A_MANOR_CANNOT_BE_SET_UP_BETWEEN_6_AM_AND_8_PM);
  public static final SystemMessage NO_ITEM_DEPOSITED_IN_WH = SystemMessage.id(SystemMessageId.NO_ITEM_DEPOSITED_IN_WH);
  public static final SystemMessage ONLY_LEVEL_1_CLAN_OR_HIGHER_CAN_USE_WAREHOUSE = SystemMessage.id(SystemMessageId.ONLY_LEVEL_1_CLAN_OR_HIGHER_CAN_USE_WAREHOUSE);
  public static final SystemMessage ONLY_CLAN_LEADER_CAN_RETRIEVE_ITEMS_FROM_CLAN_WAREHOUSE = SystemMessage.id(SystemMessageId.ONLY_CLAN_LEADER_CAN_RETRIEVE_ITEMS_FROM_CLAN_WAREHOUSE);
  public static final SystemMessage THIRD_CLASS_TRANSFER = SystemMessage.id(SystemMessageId.THIRD_CLASS_TRANSFER);
  public static final SystemMessage CLASS_TRANSFER = SystemMessage.id(SystemMessageId.CLASS_TRANSFER);
  public static final SystemMessage NO_MORE_SKILLS_TO_LEARN = SystemMessage.id(SystemMessageId.NO_MORE_SKILLS_TO_LEARN);
  public static final SystemMessage THERE_IS_NO_SKILL_THAT_ENABLES_ENCHANT = SystemMessage.id(SystemMessageId.THERE_IS_NO_SKILL_THAT_ENABLES_ENCHANT);
  public static final SystemMessage RAID_WAS_SUCCESSFUL = SystemMessage.id(SystemMessageId.RAID_WAS_SUCCESSFUL);
  public static final SystemMessage HERE_YOU_CAN_BUY_ONLY_SEEDS_OF_S1_MANOR = SystemMessage.id(SystemMessageId.HERE_YOU_CAN_BUY_ONLY_SEEDS_OF_S1_MANOR);
  public static final SystemMessage SELECT_THE_ITEM_TO_BE_AUGMENTED = SystemMessage.id(SystemMessageId.SELECT_THE_ITEM_TO_BE_AUGMENTED);
  public static final SystemMessage SELECT_THE_ITEM_FROM_WHICH_YOU_WISH_TO_REMOVE_AUGMENTATION = SystemMessage.id(SystemMessageId.SELECT_THE_ITEM_FROM_WHICH_YOU_WISH_TO_REMOVE_AUGMENTATION);
  public static final SystemMessage NO_LOTTERY_TICKETS_CURRENT_SOLD = SystemMessage.id(SystemMessageId.NO_LOTTERY_TICKETS_CURRENT_SOLD);
  public static final SystemMessage NO_LOTTERY_TICKETS_AVAILABLE = SystemMessage.id(SystemMessageId.NO_LOTTERY_TICKETS_AVAILABLE);
  public static final SystemMessage CAN_BE_USED_BY_DAWN = SystemMessage.id(SystemMessageId.CAN_BE_USED_BY_DAWN);
  public static final SystemMessage CAN_BE_USED_BY_DUSK = SystemMessage.id(SystemMessageId.CAN_BE_USED_BY_DUSK);
  public static final SystemMessage ONLY_VIEW_SIEGE = SystemMessage.id(SystemMessageId.ONLY_VIEW_SIEGE);
  public static final SystemMessage YOUR_FORCE_IS_MAX = SystemMessage.id(SystemMessageId.YOUR_FORCE_IS_MAX);
  public static final SystemMessage ACADEMY_MEMBERSHIP_TERMINATED = SystemMessage.id(SystemMessageId.ACADEMY_MEMBERSHIP_TERMINATED);
  public static final SystemMessage NOT_ENOUGH_ITEMS = SystemMessage.id(SystemMessageId.NOT_ENOUGH_ITEMS);
  public static final SystemMessage SLOTS_FULL = SystemMessage.id(SystemMessageId.SLOTS_FULL);
  public static final SystemMessage TRADE_SUCCESSFUL = SystemMessage.id(SystemMessageId.TRADE_SUCCESSFUL);
  public static final SystemMessage CANT_MOVE_SITTING = SystemMessage.id(SystemMessageId.CANT_MOVE_SITTING);
  public static final SystemMessage OBSERVERS_CANNOT_PARTICIPATE = SystemMessage.id(SystemMessageId.OBSERVERS_CANNOT_PARTICIPATE);
  public static final SystemMessage TARGET_CANT_FOUND = SystemMessage.id(SystemMessageId.TARGET_CANT_FOUND);
  public static final SystemMessage NOT_ENOUGH_MP = SystemMessage.id(SystemMessageId.NOT_ENOUGH_MP);
  public static final SystemMessage NOT_ENOUGH_HP = SystemMessage.id(SystemMessageId.NOT_ENOUGH_HP);
  public static final SystemMessage ONLY_FISHING_SKILLS_NOW = SystemMessage.id(SystemMessageId.ONLY_FISHING_SKILLS_NOW);
  public static final SystemMessage CANT_SEE_TARGET = SystemMessage.id(SystemMessageId.CANT_SEE_TARGET);
  public static final SystemMessage TARGET_TOO_FAR = SystemMessage.id(SystemMessageId.TARGET_TOO_FAR);
  public static final SystemMessage TARGET_IS_INCORRECT = SystemMessage.id(SystemMessageId.TARGET_IS_INCORRECT);
  public static final SystemMessage SWEEPER_FAILED_TARGET_NOT_SPOILED = SystemMessage.id(SystemMessageId.SWEEPER_FAILED_TARGET_NOT_SPOILED);
  public static final SystemMessage SWEEP_NOT_ALLOWED = SystemMessage.id(SystemMessageId.SWEEP_NOT_ALLOWED);
  public static final SystemMessage PLAYING_FOR_LONG_TIME = SystemMessage.id(SystemMessageId.PLAYING_FOR_LONG_TIME);
  public static final SystemMessage RES_HAS_ALREADY_BEEN_PROPOSED = SystemMessage.id(SystemMessageId.RES_HAS_ALREADY_BEEN_PROPOSED);
  public static final SystemMessage PET_CANNOT_RES = SystemMessage.id(SystemMessageId.PET_CANNOT_RES);
  public static final SystemMessage MASTER_CANNOT_RES = SystemMessage.id(SystemMessageId.MASTER_CANNOT_RES);
  public static final SystemMessage CAST_LINE_AND_START_FISHING = SystemMessage.id(SystemMessageId.CAST_LINE_AND_START_FISHING);
  public static final SystemMessage BAIT_LOST_FISH_GOT_AWAY = SystemMessage.id(SystemMessageId.BAIT_LOST_FISH_GOT_AWAY);
  public static final SystemMessage REEL_LINE_AND_STOP_FISHING = SystemMessage.id(SystemMessageId.REEL_LINE_AND_STOP_FISHING);
  public static final SystemMessage DEATH_PENALTY_LIFTED = SystemMessage.id(SystemMessageId.DEATH_PENALTY_LIFTED);
  public static final SystemMessage MISSED_TARGET = SystemMessage.id(SystemMessageId.MISSED_TARGET);
  public static final SystemMessage CRITICAL_HIT = SystemMessage.id(SystemMessageId.CRITICAL_HIT);
  public static final SystemMessage CRITICAL_HIT_MAGIC = SystemMessage.id(SystemMessageId.CRITICAL_HIT_MAGIC);
  public static final SystemMessage YOU_DO_NOT_HAVE_THE_RIGHT_TO_USE_CLAN_WAREHOUSE = SystemMessage.id(SystemMessageId.YOU_DO_NOT_HAVE_THE_RIGHT_TO_USE_CLAN_WAREHOUSE);
  public static final SystemMessage CANNOT_TRADE_DISCARD_DROP_ITEM_WHILE_IN_SHOPMODE = SystemMessage.id(SystemMessageId.CANNOT_TRADE_DISCARD_DROP_ITEM_WHILE_IN_SHOPMODE);
  public static final SystemMessage CANNOT_DO_WHILE_FISHING_3 = SystemMessage.id(SystemMessageId.CANNOT_DO_WHILE_FISHING_3);
  public static final SystemMessage CANNOT_EQUIP_PET_ITEM = SystemMessage.id(SystemMessageId.CANNOT_EQUIP_PET_ITEM);
  public static final SystemMessage NO_PORT_THAT_IS_IN_SIGE = SystemMessage.id(SystemMessageId.NO_PORT_THAT_IS_IN_SIGE);
  public static final SystemMessage MAKE_SURE_YOU_RESSURECT_YOUR_PET_WITHIN_24_HOURS = SystemMessage.id(SystemMessageId.MAKE_SURE_YOU_RESSURECT_YOUR_PET_WITHIN_24_HOURS);
  public static final SystemMessage CRITICAL_HIT_BY_PET = SystemMessage.id(SystemMessageId.CRITICAL_HIT_BY_PET);
  public static final SystemMessage MONSRACE_TICKETS_NOT_AVAILABLE = SystemMessage.id(SystemMessageId.MONSRACE_TICKETS_NOT_AVAILABLE);
  public static final SystemMessage MONSRACE_NO_PAYOUT_INFO = SystemMessage.id(SystemMessageId.MONSRACE_NO_PAYOUT_INFO);
  public static final SystemMessage SEVENSIGNS_PARTECIPATION_DAWN = SystemMessage.id(SystemMessageId.SEVENSIGNS_PARTECIPATION_DAWN);
  public static final SystemMessage SEVENSIGNS_PARTECIPATION_DUSK = SystemMessage.id(SystemMessageId.SEVENSIGNS_PARTECIPATION_DUSK);
  public static final SystemMessage FIGHT_FOR_AVARICE = SystemMessage.id(SystemMessageId.FIGHT_FOR_AVARICE);
  public static final SystemMessage FIGHT_FOR_GNOSIS = SystemMessage.id(SystemMessageId.FIGHT_FOR_GNOSIS);
  public static final SystemMessage FIGHT_FOR_STRIFE = SystemMessage.id(SystemMessageId.FIGHT_FOR_STRIFE);
  public static final SystemMessage CONTRIB_SCORE_EXCEEDED = SystemMessage.id(SystemMessageId.CONTRIB_SCORE_EXCEEDED);
  public static final SystemMessage ONLY_CLAN_LEADER_CREATE_ALLIANCE = SystemMessage.id(SystemMessageId.ONLY_CLAN_LEADER_CREATE_ALLIANCE);
  public static final SystemMessage FEATURE_ONLY_FOR_ALLIANCE_LEADER = SystemMessage.id(SystemMessageId.FEATURE_ONLY_FOR_ALLIANCE_LEADER);
  public static final SystemMessage YOU_ARE_NOT_AUTHORIZED_TO_DO_THAT = SystemMessage.id(SystemMessageId.YOU_ARE_NOT_AUTHORIZED_TO_DO_THAT);

  public static final SystemMessage SUBCLASS_TRANSFER_COMPLETED = SystemMessage.id(SystemMessageId.SUBCLASS_TRANSFER_COMPLETED);
  public static final SystemMessage ADD_NEW_SUBCLASS = SystemMessage.id(SystemMessageId.ADD_NEW_SUBCLASS);

  public static final SystemMessage CANNOT_DISPERSE_THE_CLANS_IN_ALLY = SystemMessage.id(SystemMessageId.CANNOT_DISPERSE_THE_CLANS_IN_ALLY);
  public static final SystemMessage CANNOT_DISSOLVE_WHILE_IN_WAR = SystemMessage.id(SystemMessageId.CANNOT_DISSOLVE_WHILE_IN_WAR);
  public static final SystemMessage CANNOT_DISSOLVE_WHILE_OWNING_CLAN_HALL_OR_CASTLE = SystemMessage.id(SystemMessageId.CANNOT_DISSOLVE_WHILE_OWNING_CLAN_HALL_OR_CASTLE);
  public static final SystemMessage CANNOT_DISSOLVE_CAUSE_CLAN_WILL_PARTICIPATE_IN_CASTLE_SIEGE = SystemMessage.id(SystemMessageId.CANNOT_DISSOLVE_CAUSE_CLAN_WILL_PARTICIPATE_IN_CASTLE_SIEGE);
  public static final SystemMessage CANNOT_DISSOLVE_WHILE_IN_SIEGE = SystemMessage.id(SystemMessageId.CANNOT_DISSOLVE_WHILE_IN_SIEGE);
  public static final SystemMessage DISSOLUTION_IN_PROGRESS = SystemMessage.id(SystemMessageId.DISSOLUTION_IN_PROGRESS);
  public static final SystemMessage INVITED_USER_NOT_ONLINE = SystemMessage.id(SystemMessageId.INVITED_USER_NOT_ONLINE);
  public static final SystemMessage YOU_DO_NOT_MEET_CRITERIA_IN_ORDER_TO_CREATE_A_CLAN_ACADEMY = SystemMessage.id(SystemMessageId.YOU_DO_NOT_MEET_CRITERIA_IN_ORDER_TO_CREATE_A_CLAN_ACADEMY);
  public static final SystemMessage YOU_DO_NOT_MEET_CRITERIA_IN_ORDER_TO_CREATE_A_MILITARY_UNIT = SystemMessage.id(SystemMessageId.YOU_DO_NOT_MEET_CRITERIA_IN_ORDER_TO_CREATE_A_MILITARY_UNIT);

  public static final SystemMessage ANOTHER_MILITARY_UNIT_IS_ALREADY_USING_THAT_NAME = SystemMessage.id(SystemMessageId.ANOTHER_MILITARY_UNIT_IS_ALREADY_USING_THAT_NAME);
  public static final SystemMessage CAPTAIN_OF_ORDER_OF_KNIGHTS_CANNOT_BE_APPOINTED = SystemMessage.id(SystemMessageId.CAPTAIN_OF_ORDER_OF_KNIGHTS_CANNOT_BE_APPOINTED);
  public static final SystemMessage CAPTAIN_OF_ROYAL_GUARD_CANNOT_BE_APPOINTED = SystemMessage.id(SystemMessageId.CAPTAIN_OF_ROYAL_GUARD_CANNOT_BE_APPOINTED);

  public static final SystemMessage NAMING_CHARNAME_UP_TO_16CHARS = SystemMessage.id(SystemMessageId.NAMING_CHARNAME_UP_TO_16CHARS);

  public static final SystemMessage YOU_INCREASED_YOUR_LEVEL = SystemMessage.id(SystemMessageId.YOU_INCREASED_YOUR_LEVEL);
  public static final SystemMessage PET_CANNOT_USE_ITEM = SystemMessage.id(SystemMessageId.PET_CANNOT_USE_ITEM);
  public static final SystemMessage PETS_ARE_NOT_AVAILABLE_AT_THIS_TIME = SystemMessage.id(SystemMessageId.PETS_ARE_NOT_AVAILABLE_AT_THIS_TIME);
  public static final SystemMessage SOULSHOTS_AND_SPIRITSHOTS_ARE_NOT_AVAILABLE_FOR_A_DEAD_PET = SystemMessage.id(SystemMessageId.SOULSHOTS_AND_SPIRITSHOTS_ARE_NOT_AVAILABLE_FOR_A_DEAD_PET);
  public static final SystemMessage PET_USE_THE_POWER_OF_SPIRIT = SystemMessage.id(SystemMessageId.PET_USE_THE_POWER_OF_SPIRIT);
  public static final SystemMessage ENABLED_SPIRITSHOT = SystemMessage.id(SystemMessageId.ENABLED_SPIRITSHOT);
  public static final SystemMessage INCORRECT_TARGET = SystemMessage.id(SystemMessageId.INCORRECT_TARGET);
  public static final SystemMessage SELECT_ITEM_TO_ENCHANT = SystemMessage.id(SystemMessageId.SELECT_ITEM_TO_ENCHANT);

  public static final SystemMessage FORCE_MAXLEVEL_REACHED = SystemMessage.id(SystemMessageId.FORCE_MAXLEVEL_REACHED);
  public static final SystemMessage WRONG_FISHINGSHOT_GRADE = SystemMessage.id(SystemMessageId.WRONG_FISHINGSHOT_GRADE);
  public static final SystemMessage NOTHING_HAPPENED = SystemMessage.id(SystemMessageId.NOTHING_HAPPENED);
  public static final SystemMessage RECIPE_ALREADY_REGISTERED = SystemMessage.id(SystemMessageId.RECIPE_ALREADY_REGISTERED);
  public static final SystemMessage CREATE_LVL_TOO_LOW_TO_REGISTER = SystemMessage.id(SystemMessageId.CREATE_LVL_TOO_LOW_TO_REGISTER);
  public static final SystemMessage CANT_REGISTER_NO_ABILITY_TO_CRAFT = SystemMessage.id(SystemMessageId.CANT_REGISTER_NO_ABILITY_TO_CRAFT);
  public static final SystemMessage YOU_MAY_NOT_THROW_THE_DICE_AT_THIS_TIME_TRY_AGAIN_LATER = SystemMessage.id(SystemMessageId.YOU_MAY_NOT_THROW_THE_DICE_AT_THIS_TIME_TRY_AGAIN_LATER);
  public static final SystemMessage CANNOT_BE_RESURRECTED_DURING_SIEGE = SystemMessage.id(SystemMessageId.CANNOT_BE_RESURRECTED_DURING_SIEGE);

  public static final SystemMessage INCOMPATIBLE_ITEM_GRADE = SystemMessage.id(SystemMessageId.INCOMPATIBLE_ITEM_GRADE);
  public static final SystemMessage THE_TARGET_IS_UNAVAILABLE_FOR_SEEDING = SystemMessage.id(SystemMessageId.THE_TARGET_IS_UNAVAILABLE_FOR_SEEDING);
  public static final SystemMessage THIS_SEED_MAY_NOT_BE_SOWN_HERE = SystemMessage.id(SystemMessageId.THIS_SEED_MAY_NOT_BE_SOWN_HERE);
  public static final SystemMessage ENABLED_SOULSHOT = SystemMessage.id(SystemMessageId.ENABLED_SOULSHOT);

  public static final SystemMessage YOU_ALREADY_HAVE_A_PET = SystemMessage.id(SystemMessageId.YOU_ALREADY_HAVE_A_PET);
  public static final SystemMessage YOU_CANNOT_SUMMON_IN_COMBAT = SystemMessage.id(SystemMessageId.YOU_CANNOT_SUMMON_IN_COMBAT);
  public static final SystemMessage STRIDER_CANT_BE_RIDDEN_WHILE_IN_BATTLE = SystemMessage.id(SystemMessageId.STRIDER_CANT_BE_RIDDEN_WHILE_IN_BATTLE);
  public static final SystemMessage SUMMON_A_PET = SystemMessage.id(SystemMessageId.SUMMON_A_PET);
  public static final SystemMessage THIS_ITEM_IS_NOT_AVAILABLE_FOR_THE_OLYMPIAD_EVENT = SystemMessage.id(SystemMessageId.THIS_ITEM_IS_NOT_AVAILABLE_FOR_THE_OLYMPIAD_EVENT);
  public static final SystemMessage THIS_SKILL_IS_NOT_AVAILABLE_FOR_THE_OLYMPIAD_EVENT = SystemMessage.id(SystemMessageId.THIS_SKILL_IS_NOT_AVAILABLE_FOR_THE_OLYMPIAD_EVENT);
  public static final SystemMessage LETHAL_STRIKE = SystemMessage.id(SystemMessageId.LETHAL_STRIKE);

  public static final SystemMessage YOU_MAY_NOT_SUMMON_FROM_YOUR_CURRENT_LOCATION = SystemMessage.id(SystemMessageId.YOU_MAY_NOT_SUMMON_FROM_YOUR_CURRENT_LOCATION);
  public static final SystemMessage YOU_CANNOT_SUMMON_PLAYERS_WHO_ARE_IN_OLYMPIAD = SystemMessage.id(SystemMessageId.YOU_CANNOT_SUMMON_PLAYERS_WHO_ARE_IN_OLYMPIAD);
  public static final SystemMessage YOUR_TARGET_IS_IN_AN_AREA_WHICH_BLOCKS_SUMMONING = SystemMessage.id(SystemMessageId.YOUR_TARGET_IS_IN_AN_AREA_WHICH_BLOCKS_SUMMONING);
  public static final SystemMessage ATTACK_FAILED = SystemMessage.id(SystemMessageId.ATTACK_FAILED);
  public static final SystemMessage CANNOT_CREATED_WHILE_ENGAGED_IN_TRADING = SystemMessage.id(SystemMessageId.CANNOT_CREATED_WHILE_ENGAGED_IN_TRADING);
  public static final SystemMessage FISHING_ATTEMPT_CANCELLED = SystemMessage.id(SystemMessageId.FISHING_ATTEMPT_CANCELLED);
  public static final SystemMessage FISHING_POLE_NOT_EQUIPPED = SystemMessage.id(SystemMessageId.FISHING_POLE_NOT_EQUIPPED);
  public static final SystemMessage BAIT_ON_HOOK_BEFORE_FISHING = SystemMessage.id(SystemMessageId.BAIT_ON_HOOK_BEFORE_FISHING);
  public static final SystemMessage NOT_ENOUGH_BAIT = SystemMessage.id(SystemMessageId.NOT_ENOUGH_BAIT);
  public static final SystemMessage CANNOT_FISH_ON_BOAT = SystemMessage.id(SystemMessageId.CANNOT_FISH_ON_BOAT);
  public static final SystemMessage CANNOT_FISH_WHILE_USING_RECIPE_BOOK = SystemMessage.id(SystemMessageId.CANNOT_FISH_WHILE_USING_RECIPE_BOOK);
  public static final SystemMessage CANNOT_FISH_HERE = SystemMessage.id(SystemMessageId.CANNOT_FISH_HERE);
  public static final SystemMessage CAN_USE_PUMPING_ONLY_WHILE_FISHING = SystemMessage.id(SystemMessageId.CAN_USE_PUMPING_ONLY_WHILE_FISHING);
  public static final SystemMessage CAN_USE_REELING_ONLY_WHILE_FISHING = SystemMessage.id(SystemMessageId.CAN_USE_REELING_ONLY_WHILE_FISHING);
  public static final SystemMessage REELING_PUMPING_3_LEVELS_HIGHER_THAN_FISHING_PENALTY = SystemMessage.id(SystemMessageId.REELING_PUMPING_3_LEVELS_HIGHER_THAN_FISHING_PENALTY);
  public static final SystemMessage TARGET_IS_NOT_FOUND_IN_THE_GAME = SystemMessage.id(SystemMessageId.TARGET_IS_NOT_FOUND_IN_THE_GAME);
  public static final SystemMessage YOU_ARE_NOT_A_CLAN_MEMBER = SystemMessage.id(SystemMessageId.YOU_ARE_NOT_A_CLAN_MEMBER);
  public static final SystemMessage NO_CURRENT_ALLIANCES = SystemMessage.id(SystemMessageId.NO_CURRENT_ALLIANCES);

  public static final SystemMessage CLAN_DOESNT_EXISTS = SystemMessage.id(SystemMessageId.CLAN_DOESNT_EXISTS);
  public static final SystemMessage ALLIANCE_LEADER_CANT_WITHDRAW = SystemMessage.id(SystemMessageId.ALLIANCE_LEADER_CANT_WITHDRAW);
  public static final SystemMessage DIFFERANT_ALLIANCE = SystemMessage.id(SystemMessageId.DIFFERANT_ALLIANCE);
  public static final SystemMessage YOU_HAVE_EXPELED_A_CLAN = SystemMessage.id(SystemMessageId.YOU_HAVE_EXPELED_A_CLAN);
  public static final SystemMessage ONLY_CLAN_LEADER_WITHDRAW_ALLY = SystemMessage.id(SystemMessageId.ONLY_CLAN_LEADER_WITHDRAW_ALLY);
  public static final SystemMessage YOU_HAVE_WITHDRAWN_FROM_ALLIANCE = SystemMessage.id(SystemMessageId.YOU_HAVE_WITHDRAWN_FROM_ALLIANCE);
  public static final SystemMessage WELCOME_TO_LINEAGE = SystemMessage.id(SystemMessageId.WELCOME_TO_LINEAGE);
  public static final SystemMessage CANT_LOGOUT_WHILE_FIGHTING = SystemMessage.id(SystemMessageId.CANT_LOGOUT_WHILE_FIGHTING);
  public static final SystemMessage YOU_HAVE_EXCEEDED_QUANTITY_THAT_CAN_BE_INPUTTED = SystemMessage.id(SystemMessageId.YOU_HAVE_EXCEEDED_QUANTITY_THAT_CAN_BE_INPUTTED);
  public static final SystemMessage ONLY_THE_CLAN_LEADER_IS_ENABLED = SystemMessage.id(SystemMessageId.ONLY_THE_CLAN_LEADER_IS_ENABLED);
  public static final SystemMessage THE_CLAN_REPUTATION_SCORE_IS_TOO_LOW = SystemMessage.id(SystemMessageId.THE_CLAN_REPUTATION_SCORE_IS_TOO_LOW);
  public static final SystemMessage DEAD_PET_CANNOT_BE_RETURNED = SystemMessage.id(SystemMessageId.DEAD_PET_CANNOT_BE_RETURNED);
  public static final SystemMessage PET_CANNOT_SENT_BACK_DURING_BATTLE = SystemMessage.id(SystemMessageId.PET_CANNOT_SENT_BACK_DURING_BATTLE);
  public static final SystemMessage YOU_CANNOT_RESTORE_HUNGRY_PETS = SystemMessage.id(SystemMessageId.YOU_CANNOT_RESTORE_HUNGRY_PETS);
  public static final SystemMessage STRIDER_CANT_BE_RIDDEN_WHILE_DEAD = SystemMessage.id(SystemMessageId.STRIDER_CANT_BE_RIDDEN_WHILE_DEAD);
  public static final SystemMessage DEAD_STRIDER_CANT_BE_RIDDEN = SystemMessage.id(SystemMessageId.DEAD_STRIDER_CANT_BE_RIDDEN);
  public static final SystemMessage STRIDER_IN_BATLLE_CANT_BE_RIDDEN = SystemMessage.id(SystemMessageId.STRIDER_IN_BATLLE_CANT_BE_RIDDEN);

  public static final SystemMessage STRIDER_CAN_BE_RIDDEN_ONLY_WHILE_STANDING = SystemMessage.id(SystemMessageId.STRIDER_CAN_BE_RIDDEN_ONLY_WHILE_STANDING);
  public static final SystemMessage CANNOT_DO_WHILE_FISHING_2 = SystemMessage.id(SystemMessageId.CANNOT_DO_WHILE_FISHING_2);
  public static final SystemMessage SKILL_NOT_AVAILABLE = SystemMessage.id(SystemMessageId.SKILL_NOT_AVAILABLE);
  public static final SystemMessage YOU_HAVE_SUCCEEDED_INVITING_FRIEND = SystemMessage.id(SystemMessageId.YOU_HAVE_SUCCEEDED_INVITING_FRIEND);
  public static final SystemMessage FAILED_TO_INVITE_A_FRIEND = SystemMessage.id(SystemMessageId.FAILED_TO_INVITE_A_FRIEND);
  public static final SystemMessage YOU_ACCEPTED_ALLIANCE = SystemMessage.id(SystemMessageId.YOU_ACCEPTED_ALLIANCE);
  public static final SystemMessage FAILED_TO_INVITE_CLAN_IN_ALLIANCE = SystemMessage.id(SystemMessageId.FAILED_TO_INVITE_CLAN_IN_ALLIANCE);
  public static final SystemMessage PARTY_FULL = SystemMessage.id(SystemMessageId.PARTY_FULL);
  public static final SystemMessage PLAYER_DECLINED = SystemMessage.id(SystemMessageId.PLAYER_DECLINED);
  public static final SystemMessage ENTERED_THE_CLAN = SystemMessage.id(SystemMessageId.ENTERED_THE_CLAN);
  public static final SystemMessage ITEM_MISSING_TO_LEARN_SKILL = SystemMessage.id(SystemMessageId.ITEM_MISSING_TO_LEARN_SKILL);
  public static final SystemMessage NOT_ENOUGH_SP_TO_LEARN_SKILL = SystemMessage.id(SystemMessageId.NOT_ENOUGH_SP_TO_LEARN_SKILL);
  public static final SystemMessage ACQUIRE_SKILL_FAILED_BAD_CLAN_REP_SCORE = SystemMessage.id(SystemMessageId.ACQUIRE_SKILL_FAILED_BAD_CLAN_REP_SCORE);

  public static final SystemMessage NO_SERVITOR_CANNOT_AUTOMATE_USE = SystemMessage.id(SystemMessageId.NO_SERVITOR_CANNOT_AUTOMATE_USE);
  public static final SystemMessage FAILED_TO_REGISTER_TO_IGNORE_LIST = SystemMessage.id(SystemMessageId.FAILED_TO_REGISTER_TO_IGNORE_LIST);
  public static final SystemMessage YOU_MAY_NOT_IMPOSE_A_BLOCK_AN_A_GM = SystemMessage.id(SystemMessageId.YOU_MAY_NOT_IMPOSE_A_BLOCK_AN_A_GM);

  public static final SystemMessage WEIGHT_LIMIT_EXCEEDED = SystemMessage.id(SystemMessageId.WEIGHT_LIMIT_EXCEEDED);

  public static final SystemMessage NAMING_YOU_CANNOT_SET_NAME_OF_THE_PET = SystemMessage.id(SystemMessageId.NAMING_YOU_CANNOT_SET_NAME_OF_THE_PET);
  public static final SystemMessage NAMING_ALREADY_IN_USE_BY_ANOTHER_PET = SystemMessage.id(SystemMessageId.NAMING_ALREADY_IN_USE_BY_ANOTHER_PET);
  public static final SystemMessage NAMING_PETNAME_CONTAINS_INVALID_CHARS = SystemMessage.id(SystemMessageId.NAMING_PETNAME_CONTAINS_INVALID_CHARS);
  public static final SystemMessage NAMING_PETNAME_UP_TO_8CHARS = SystemMessage.id(SystemMessageId.NAMING_PETNAME_UP_TO_8CHARS);
  public static final SystemMessage THIS_IS_NOT_A_SUITABLE_ITEM = SystemMessage.id(SystemMessageId.THIS_IS_NOT_A_SUITABLE_ITEM);
  public static final SystemMessage GEMSTONE_QUANTITY_IS_INCORRECT = SystemMessage.id(SystemMessageId.GEMSTONE_QUANTITY_IS_INCORRECT);
  public static final SystemMessage PRESS_THE_AUGMENT_BUTTON_TO_BEGIN = SystemMessage.id(SystemMessageId.PRESS_THE_AUGMENT_BUTTON_TO_BEGIN);
  public static final SystemMessage ONCE_AN_ITEM_IS_AUGMENTED_IT_CANNOT_BE_AUGMENTED_AGAIN = SystemMessage.id(SystemMessageId.ONCE_AN_ITEM_IS_AUGMENTED_IT_CANNOT_BE_AUGMENTED_AGAIN);
  public static final SystemMessage YOU_CANNOT_AUGMENT_ITEMS_WHILE_A_PRIVATE_STORE_OR_PRIVATE_WORKSHOP_IS_IN_OPERATION = SystemMessage.id(SystemMessageId.YOU_CANNOT_AUGMENT_ITEMS_WHILE_A_PRIVATE_STORE_OR_PRIVATE_WORKSHOP_IS_IN_OPERATION);
  public static final SystemMessage YOU_CANNOT_AUGMENT_ITEMS_WHILE_DEAD = SystemMessage.id(SystemMessageId.YOU_CANNOT_AUGMENT_ITEMS_WHILE_DEAD);
  public static final SystemMessage YOU_CANNOT_AUGMENT_ITEMS_WHILE_PARALYZED = SystemMessage.id(SystemMessageId.YOU_CANNOT_AUGMENT_ITEMS_WHILE_PARALYZED);
  public static final SystemMessage YOU_CANNOT_AUGMENT_ITEMS_WHILE_FISHING = SystemMessage.id(SystemMessageId.YOU_CANNOT_AUGMENT_ITEMS_WHILE_FISHING);
  public static final SystemMessage YOU_CANNOT_AUGMENT_ITEMS_WHILE_SITTING_DOWN = SystemMessage.id(SystemMessageId.YOU_CANNOT_AUGMENT_ITEMS_WHILE_SITTING_DOWN);
  public static final SystemMessage SELECT_THE_CATALYST_FOR_AUGMENTATION = SystemMessage.id(SystemMessageId.SELECT_THE_CATALYST_FOR_AUGMENTATION);

  public static final SystemMessage CRYSTALLIZE_LEVEL_TOO_LOW = SystemMessage.id(SystemMessageId.CRYSTALLIZE_LEVEL_TOO_LOW);

  public static final SystemMessage CANNOT_DISCARD_THIS_ITEM = SystemMessage.id(SystemMessageId.CANNOT_DISCARD_THIS_ITEM);
  public static final SystemMessage CANNOT_DISCARD_EXCHANGE_ITEM = SystemMessage.id(SystemMessageId.CANNOT_DISCARD_EXCHANGE_ITEM);
  public static final SystemMessage CANNOT_DISCARD_DISTANCE_TOO_FAR = SystemMessage.id(SystemMessageId.CANNOT_DISCARD_DISTANCE_TOO_FAR);
  public static final SystemMessage YOU_ARE_UNABLE_TO_REQUEST_A_DUEL_AT_THIS_TIME = SystemMessage.id(SystemMessageId.YOU_ARE_UNABLE_TO_REQUEST_A_DUEL_AT_THIS_TIME);
  public static final SystemMessage THE_OPPOSING_PARTY_HAS_DECLINED_YOUR_CHALLENGE_TO_A_DUEL = SystemMessage.id(SystemMessageId.THE_OPPOSING_PARTY_HAS_DECLINED_YOUR_CHALLENGE_TO_A_DUEL);
  public static final SystemMessage THERE_IS_NO_OPPONENT_TO_RECEIVE_YOUR_CHALLENGE_FOR_A_DUEL = SystemMessage.id(SystemMessageId.THERE_IS_NO_OPPONENT_TO_RECEIVE_YOUR_CHALLENGE_FOR_A_DUEL);
  public static final SystemMessage SINCE_THE_PERSON_YOU_CHALLENGED_IS_NOT_CURRENTLY_IN_A_PARTY_THEY_CANNOT_DUEL_AGAINST_YOUR_PARTY = SystemMessage.id(SystemMessageId.SINCE_THE_PERSON_YOU_CHALLENGED_IS_NOT_CURRENTLY_IN_A_PARTY_THEY_CANNOT_DUEL_AGAINST_YOUR_PARTY);
  public static final SystemMessage THE_OPPOSING_PARTY_IS_CURRENTLY_UNABLE_TO_ACCEPT_A_CHALLENGE_TO_A_DUEL = SystemMessage.id(SystemMessageId.THE_OPPOSING_PARTY_IS_CURRENTLY_UNABLE_TO_ACCEPT_A_CHALLENGE_TO_A_DUEL);
  public static final SystemMessage INAPPROPRIATE_ENCHANT_CONDITION = SystemMessage.id(SystemMessageId.INAPPROPRIATE_ENCHANT_CONDITION);
  public static final SystemMessage BLESSED_ENCHANT_FAILED = SystemMessage.id(SystemMessageId.BLESSED_ENCHANT_FAILED);
  public static final SystemMessage ONLY_LEVEL_SUP_10_CAN_RECOMMEND = SystemMessage.id(SystemMessageId.ONLY_LEVEL_SUP_10_CAN_RECOMMEND);
  public static final SystemMessage YOU_CANNOT_RECOMMEND_YOURSELF = SystemMessage.id(SystemMessageId.YOU_CANNOT_RECOMMEND_YOURSELF);
  public static final SystemMessage NO_MORE_RECOMMENDATIONS_TO_HAVE = SystemMessage.id(SystemMessageId.NO_MORE_RECOMMENDATIONS_TO_HAVE);
  public static final SystemMessage YOU_NO_LONGER_RECIVE_A_RECOMMENDATION = SystemMessage.id(SystemMessageId.YOU_NO_LONGER_RECIVE_A_RECOMMENDATION);
  public static final SystemMessage THAT_CHARACTER_IS_RECOMMENDED = SystemMessage.id(SystemMessageId.THAT_CHARACTER_IS_RECOMMENDED);
  public static final SystemMessage THE_USER_YOU_REQUESTED_IS_NOT_IN_GAME = SystemMessage.id(SystemMessageId.THE_USER_YOU_REQUESTED_IS_NOT_IN_GAME);
  public static final SystemMessage YOU_DONT_HAVE_ALL_OF_THE_ITEMS_NEEDED_TO_ENCHANT_THAT_SKILL = SystemMessage.id(SystemMessageId.YOU_DONT_HAVE_ALL_OF_THE_ITEMS_NEEDED_TO_ENCHANT_THAT_SKILL);
  public static final SystemMessage YOU_DONT_HAVE_ENOUGH_EXP_TO_ENCHANT_THAT_SKILL = SystemMessage.id(SystemMessageId.YOU_DONT_HAVE_ENOUGH_EXP_TO_ENCHANT_THAT_SKILL);
  public static final SystemMessage YOU_DONT_HAVE_ENOUGH_SP_TO_ENCHANT_THAT_SKILL = SystemMessage.id(SystemMessageId.YOU_DONT_HAVE_ENOUGH_SP_TO_ENCHANT_THAT_SKILL);
  public static final SystemMessage CLAN_EMBLEM_WAS_SUCCESSFULLY_REGISTERED = SystemMessage.id(SystemMessageId.CLAN_EMBLEM_WAS_SUCCESSFULLY_REGISTERED);
  public static final SystemMessage WAITING_FOR_ANOTHER_REPLY = SystemMessage.id(SystemMessageId.WAITING_FOR_ANOTHER_REPLY);
  public static final SystemMessage YOU_CANNOT_ADD_YOURSELF_TO_OWN_FRIEND_LIST = SystemMessage.id(SystemMessageId.YOU_CANNOT_ADD_YOURSELF_TO_OWN_FRIEND_LIST);
  public static final SystemMessage ITEM_NOT_FOR_PETS = SystemMessage.id(SystemMessageId.ITEM_NOT_FOR_PETS);
  public static final SystemMessage CANNOT_GIVE_ITEMS_TO_DEAD_PET = SystemMessage.id(SystemMessageId.CANNOT_GIVE_ITEMS_TO_DEAD_PET);
  public static final SystemMessage TITLE_CHANGED = SystemMessage.id(SystemMessageId.TITLE_CHANGED);
  public static final SystemMessage CLAN_LVL_3_NEEDED_TO_ENDOWE_TITLE = SystemMessage.id(SystemMessageId.CLAN_LVL_3_NEEDED_TO_ENDOWE_TITLE);

  public static final SystemMessage CANT_PARTICIPATE_IN_SIEGE_WHILE_DISSOLUTION_IN_PROGRESS = SystemMessage.id(SystemMessageId.CANT_PARTICIPATE_IN_SIEGE_WHILE_DISSOLUTION_IN_PROGRESS);
  public static final SystemMessage INVALID_MACRO = SystemMessage.id(SystemMessageId.INVALID_MACRO);
  public static final SystemMessage YOU_MAY_CREATE_UP_TO_24_MACROS = SystemMessage.id(SystemMessageId.YOU_MAY_CREATE_UP_TO_24_MACROS);
  public static final SystemMessage ENTER_THE_MACRO_NAME = SystemMessage.id(SystemMessageId.ENTER_THE_MACRO_NAME);
  public static final SystemMessage MACRO_DESCRIPTION_MAX_32_CHARS = SystemMessage.id(SystemMessageId.MACRO_DESCRIPTION_MAX_32_CHARS);
  public static final SystemMessage YOU_CANNOT_DISMISS_YOURSELF = SystemMessage.id(SystemMessageId.YOU_CANNOT_DISMISS_YOURSELF);
  public static final SystemMessage CLAN_MEMBER_CANNOT_BE_DISMISSED_DURING_COMBAT = SystemMessage.id(SystemMessageId.CLAN_MEMBER_CANNOT_BE_DISMISSED_DURING_COMBAT);
  public static final SystemMessage YOU_HAVE_SUCCEEDED_IN_EXPELLING_CLAN_MEMBER = SystemMessage.id(SystemMessageId.YOU_HAVE_SUCCEEDED_IN_EXPELLING_CLAN_MEMBER);
  public static final SystemMessage YOU_MUST_WAIT_BEFORE_ACCEPTING_A_NEW_MEMBER = SystemMessage.id(SystemMessageId.YOU_MUST_WAIT_BEFORE_ACCEPTING_A_NEW_MEMBER);
  public static final SystemMessage CLAN_MEMBERSHIP_TERMINATED = SystemMessage.id(SystemMessageId.CLAN_MEMBERSHIP_TERMINATED);

  public static final SystemMessage GAME_CLIENT_UNABLE_TO_CONNECT_TO_PETITION_SERVER = SystemMessage.id(SystemMessageId.GAME_CLIENT_UNABLE_TO_CONNECT_TO_PETITION_SERVER);
  public static final SystemMessage ONLY_ONE_ACTIVE_PETITION_AT_TIME = SystemMessage.id(SystemMessageId.ONLY_ONE_ACTIVE_PETITION_AT_TIME);
  public static final SystemMessage PETITION_SYSTEM_CURRENT_UNAVAILABLE = SystemMessage.id(SystemMessageId.PETITION_SYSTEM_CURRENT_UNAVAILABLE);
  public static final SystemMessage PETITION_MAX_CHARS_255 = SystemMessage.id(SystemMessageId.PETITION_MAX_CHARS_255);
  public static final SystemMessage PETITION_UNDER_PROCESS = SystemMessage.id(SystemMessageId.PETITION_UNDER_PROCESS);
  public static final SystemMessage FAILED_CANCEL_PETITION_TRY_LATER = SystemMessage.id(SystemMessageId.FAILED_CANCEL_PETITION_TRY_LATER);
  public static final SystemMessage PETITION_NOT_SUBMITTED = SystemMessage.id(SystemMessageId.PETITION_NOT_SUBMITTED);

  public static final SystemMessage YOU_DO_NOT_HAVE_THE_RIGHT_TO_DISMISS_AN_APPRENTICE = SystemMessage.id(SystemMessageId.YOU_DO_NOT_HAVE_THE_RIGHT_TO_DISMISS_AN_APPRENTICE);
  public static final SystemMessage CANT_CRAFT_DURING_COMBAT = SystemMessage.id(SystemMessageId.CANT_CRAFT_DURING_COMBAT);

  public static final SystemMessage AUGMENTATION_FAILED_DUE_TO_INAPPROPRIATE_CONDITIONS = SystemMessage.id(SystemMessageId.AUGMENTATION_FAILED_DUE_TO_INAPPROPRIATE_CONDITIONS);
  public static final SystemMessage THE_ITEM_WAS_SUCCESSFULLY_AUGMENTED = SystemMessage.id(SystemMessageId.THE_ITEM_WAS_SUCCESSFULLY_AUGMENTED);
  public static final SystemMessage AUGMENTED_ITEM_CANNOT_BE_DISCARDED = SystemMessage.id(SystemMessageId.AUGMENTED_ITEM_CANNOT_BE_DISCARDED);
  public static final SystemMessage AUGMENTATION_REMOVAL_CAN_ONLY_BE_DONE_ON_AN_AUGMENTED_ITEM = SystemMessage.id(SystemMessageId.AUGMENTATION_REMOVAL_CAN_ONLY_BE_DONE_ON_AN_AUGMENTED_ITEM);
  public static final SystemMessage CANT_DRAW_SYMBOL = SystemMessage.id(SystemMessageId.CANT_DRAW_SYMBOL);
  public static final SystemMessage SYMBOL_ADDED = SystemMessage.id(SystemMessageId.SYMBOL_ADDED);
  public static final SystemMessage CANT_ALTER_RECIPEBOOK_WHILE_CRAFTING = SystemMessage.id(SystemMessageId.CANT_ALTER_RECIPEBOOK_WHILE_CRAFTING);
  public static final SystemMessage REJUVENATING_HP = SystemMessage.id(SystemMessageId.REJUVENATING_HP);
  public static final SystemMessage LETHAL_STRIKE_SUCCESSFUL = SystemMessage.id(SystemMessageId.LETHAL_STRIKE_SUCCESSFUL);
  public static final SystemMessage FAILED_TO_UNLOCK_DOOR = SystemMessage.id(SystemMessageId.FAILED_TO_UNLOCK_DOOR);
  public static final SystemMessage FORCE_MAXIMUM = SystemMessage.id(SystemMessageId.FORCE_MAXIMUM);
  public static final SystemMessage OLYMPIAD_PERIOD_S1_HAS_ENDED = SystemMessage.id(SystemMessageId.OLYMPIAD_PERIOD_S1_HAS_ENDED);
  public static final SystemMessage THE_OLYMPIAD_GAME_IS_NOT_CURRENTLY_IN_PROGRESS = SystemMessage.id(SystemMessageId.THE_OLYMPIAD_GAME_IS_NOT_CURRENTLY_IN_PROGRESS);
  public static final SystemMessage ONLY_NOBLESS_CAN_PARTICIPATE_IN_THE_OLYMPIAD = SystemMessage.id(SystemMessageId.ONLY_NOBLESS_CAN_PARTICIPATE_IN_THE_OLYMPIAD);
  public static final SystemMessage YOU_CANT_JOIN_THE_OLYMPIAD_WITH_A_SUB_JOB_CHARACTER = SystemMessage.id(SystemMessageId.YOU_CANT_JOIN_THE_OLYMPIAD_WITH_A_SUB_JOB_CHARACTER);
  public static final SystemMessage GAME_REQUEST_CANNOT_BE_MADE = SystemMessage.id(SystemMessageId.GAME_REQUEST_CANNOT_BE_MADE);
  public static final SystemMessage YOU_ARE_ALREADY_ON_THE_WAITING_LIST_TO_PARTICIPATE_IN_THE_GAME_FOR_YOUR_CLASS = SystemMessage.id(SystemMessageId.YOU_ARE_ALREADY_ON_THE_WAITING_LIST_TO_PARTICIPATE_IN_THE_GAME_FOR_YOUR_CLASS);
  public static final SystemMessage YOU_ARE_ALREADY_ON_THE_WAITING_LIST_FOR_ALL_CLASSES_WAITING_TO_PARTICIPATE_IN_THE_GAME = SystemMessage.id(SystemMessageId.YOU_ARE_ALREADY_ON_THE_WAITING_LIST_FOR_ALL_CLASSES_WAITING_TO_PARTICIPATE_IN_THE_GAME);
  public static final SystemMessage YOU_HAVE_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_CLASSIFIED_GAMES = SystemMessage.id(SystemMessageId.YOU_HAVE_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_CLASSIFIED_GAMES);
  public static final SystemMessage YOU_HAVE_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_NO_CLASS_GAMES = SystemMessage.id(SystemMessageId.YOU_HAVE_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_NO_CLASS_GAMES);

  public static final SystemMessage YOU_HAVE_NOT_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_A_GAME = SystemMessage.id(SystemMessageId.YOU_HAVE_NOT_BEEN_REGISTERED_IN_A_WAITING_LIST_OF_A_GAME);
  public static final SystemMessage YOU_HAVE_BEEN_DELETED_FROM_THE_WAITING_LIST_OF_A_GAME = SystemMessage.id(SystemMessageId.YOU_HAVE_BEEN_DELETED_FROM_THE_WAITING_LIST_OF_A_GAME);
  public static final SystemMessage THE_OLYMPIAD_GAME_HAS_STARTED = SystemMessage.id(SystemMessageId.THE_OLYMPIAD_GAME_HAS_STARTED);
  public static final SystemMessage OLYMPIAD_REGISTRATION_PERIOD_ENDED = SystemMessage.id(SystemMessageId.OLYMPIAD_REGISTRATION_PERIOD_ENDED);
  public static final SystemMessage THE_OLYMPIAD_GAME_HAS_ENDED = SystemMessage.id(SystemMessageId.THE_OLYMPIAD_GAME_HAS_ENDED);
  public static final SystemMessage WHILE_YOU_ARE_ON_THE_WAITING_LIST_YOU_ARE_NOT_ALLOWED_TO_WATCH_THE_GAME = SystemMessage.id(SystemMessageId.WHILE_YOU_ARE_ON_THE_WAITING_LIST_YOU_ARE_NOT_ALLOWED_TO_WATCH_THE_GAME);
  public static final SystemMessage SHIELD_DEFENCE_SUCCESSFULL = SystemMessage.id(SystemMessageId.SHIELD_DEFENCE_SUCCESSFULL);
  public static final SystemMessage GETTING_READY_TO_SHOOT_AN_ARROW = SystemMessage.id(SystemMessageId.GETTING_READY_TO_SHOOT_AN_ARROW);
  public static final SystemMessage CASTING_INTERRUPTED = SystemMessage.id(SystemMessageId.CASTING_INTERRUPTED);
  public static final SystemMessage NOT_ENOUGH_SOULSHOTS = SystemMessage.id(SystemMessageId.NOT_ENOUGH_SOULSHOTS);
  public static final SystemMessage NOT_ENOUGH_SPIRITSHOTS = SystemMessage.id(SystemMessageId.NOT_ENOUGH_SPIRITSHOTS);
  public static final SystemMessage SUBCLASS_NO_CHANGE_OR_CREATE_WHILE_SKILL_IN_USE = SystemMessage.id(SystemMessageId.SUBCLASS_NO_CHANGE_OR_CREATE_WHILE_SKILL_IN_USE);
  public static final SystemMessage CANT_CHANGE_SUB_SUMMON = SystemMessage.id(SystemMessageId.CANT_CHANGE_SUB_SUMMON);
  public static final SystemMessage PLEASE_WAIT = SystemMessage.id(SystemMessageId.PLEASE_WAIT);
  public static final SystemMessage OOPS_ERROR = SystemMessage.id(SystemMessageId.OOPS_ERROR);
  public static final SystemMessage THE_GAME_ENDED_IN_A_TIE = SystemMessage.id(SystemMessageId.THE_GAME_ENDED_IN_A_TIE);
  public static final SystemMessage STARTS_THE_GAME = SystemMessage.id(SystemMessageId.STARTS_THE_GAME);
  public static final SystemMessage THE_PERSON_IS_IN_MESSAGE_REFUSAL_MODE = SystemMessage.id(SystemMessageId.THE_PERSON_IS_IN_MESSAGE_REFUSAL_MODE);
  public static final SystemMessage YOU_ARE_NOT_IN_PETITION_CHAT = SystemMessage.id(SystemMessageId.YOU_ARE_NOT_IN_PETITION_CHAT);
  public static final SystemMessage LET_THE_DUEL_BEGIN = SystemMessage.id(SystemMessageId.LET_THE_DUEL_BEGIN);
  public static final SystemMessage THE_DUEL_HAS_ENDED_IN_A_TIE = SystemMessage.id(SystemMessageId.THE_DUEL_HAS_ENDED_IN_A_TIE);
  public static final SystemMessage ENTERED_COMBAT_ZONE = SystemMessage.id(SystemMessageId.ENTERED_COMBAT_ZONE);
  public static final SystemMessage LEFT_COMBAT_ZONE = SystemMessage.id(SystemMessageId.LEFT_COMBAT_ZONE);
  public static final SystemMessage CLAN_THAT_OWNS_CASTLE_IS_AUTOMATICALLY_REGISTERED_DEFENDING = SystemMessage.id(SystemMessageId.CLAN_THAT_OWNS_CASTLE_IS_AUTOMATICALLY_REGISTERED_DEFENDING);
  public static final SystemMessage CANNOT_EQUIP_ITEM_DUE_TO_BAD_CONDITION = SystemMessage.id(SystemMessageId.CANNOT_EQUIP_ITEM_DUE_TO_BAD_CONDITION);
  public static final SystemMessage OVER_HIT = SystemMessage.id(SystemMessageId.OVER_HIT);
  public static final SystemMessage SOUL_CRYSTAL_ABSORBING_FAILED_RESONATION = SystemMessage.id(SystemMessageId.SOUL_CRYSTAL_ABSORBING_FAILED_RESONATION);
  public static final SystemMessage SOUL_CRYSTAL_ABSORBING_REFUSED = SystemMessage.id(SystemMessageId.SOUL_CRYSTAL_ABSORBING_REFUSED);
  public static final SystemMessage SOUL_CRYSTAL_ABSORBING_FAILED = SystemMessage.id(SystemMessageId.SOUL_CRYSTAL_ABSORBING_FAILED);
  public static final SystemMessage SOUL_CRYSTAL_BROKE = SystemMessage.id(SystemMessageId.SOUL_CRYSTAL_BROKE);
  public static final SystemMessage SOUL_CRYSTAL_ABSORBING_SUCCEEDED = SystemMessage.id(SystemMessageId.SOUL_CRYSTAL_ABSORBING_SUCCEEDED);
  public static final SystemMessage CANNOT_ATTACK_WITH_FISHING_POLE = SystemMessage.id(SystemMessageId.CANNOT_ATTACK_WITH_FISHING_POLE);
  public static final SystemMessage NOT_ENOUGH_ARROWS = SystemMessage.id(SystemMessageId.NOT_ENOUGH_ARROWS);
  public static final SystemMessage CLAN_HAS_ALREADY_ESTABLISHED_A_CLAN_ACADEMY = SystemMessage.id(SystemMessageId.CLAN_HAS_ALREADY_ESTABLISHED_A_CLAN_ACADEMY);
  public static final SystemMessage CLAN_REPUTATION_SCORE_IS_TOO_LOW = SystemMessage.id(SystemMessageId.CLAN_REPUTATION_SCORE_IS_TOO_LOW);
  public static final SystemMessage REPUTATION_POINTS_0_OR_LOWER_CLAN_SKILLS_DEACTIVATED = SystemMessage.id(SystemMessageId.REPUTATION_POINTS_0_OR_LOWER_CLAN_SKILLS_DEACTIVATED);
  public static final SystemMessage CLAN_SKILLS_WILL_BE_ACTIVATED_SINCE_REPUTATION_IS_0_OR_HIGHER = SystemMessage.id(SystemMessageId.CLAN_SKILLS_WILL_BE_ACTIVATED_SINCE_REPUTATION_IS_0_OR_HIGHER);
  public static final SystemMessage YOU_HAVE_INVITED_THE_WRONG_TARGET = SystemMessage.id(SystemMessageId.YOU_HAVE_INVITED_THE_WRONG_TARGET);

  public static final SystemMessage SUBCLAN_IS_FULL = SystemMessage.id(SystemMessageId.SUBCLAN_IS_FULL);

  public static final SystemMessage CANT_INVITE_CLAN_WITHIN_1_DAY = SystemMessage.id(SystemMessageId.CANT_INVITE_CLAN_WITHIN_1_DAY);
  public static final SystemMessage TARGET_MUST_BE_IN_CLAN = SystemMessage.id(SystemMessageId.TARGET_MUST_BE_IN_CLAN);
  public static final SystemMessage CANT_ENTER_ALLIANCE_WITHIN_1_DAY = SystemMessage.id(SystemMessageId.CANT_ENTER_ALLIANCE_WITHIN_1_DAY);
  public static final SystemMessage OPPOSING_CLAN_IS_PARTICIPATING_IN_SIEGE = SystemMessage.id(SystemMessageId.OPPOSING_CLAN_IS_PARTICIPATING_IN_SIEGE);
  public static final SystemMessage MAY_NOT_ALLY_CLAN_BATTLE = SystemMessage.id(SystemMessageId.MAY_NOT_ALLY_CLAN_BATTLE);
  public static final SystemMessage YOU_HAVE_EXCEEDED_THE_LIMIT = SystemMessage.id(SystemMessageId.YOU_HAVE_EXCEEDED_THE_LIMIT);

  public static final SystemMessage ALREADY_JOINED_ALLIANCE = SystemMessage.id(SystemMessageId.ALREADY_JOINED_ALLIANCE);
  public static final SystemMessage TO_CREATE_AN_ALLY_YOU_CLAN_MUST_BE_LEVEL_5_OR_HIGHER = SystemMessage.id(SystemMessageId.TO_CREATE_AN_ALLY_YOU_CLAN_MUST_BE_LEVEL_5_OR_HIGHER);
  public static final SystemMessage CANT_CREATE_ALLIANCE_10_DAYS_DISOLUTION = SystemMessage.id(SystemMessageId.CANT_CREATE_ALLIANCE_10_DAYS_DISOLUTION);
  public static final SystemMessage YOU_MAY_NOT_CREATE_ALLY_WHILE_DISSOLVING = SystemMessage.id(SystemMessageId.YOU_MAY_NOT_CREATE_ALLY_WHILE_DISSOLVING);
  public static final SystemMessage INCORRECT_ALLIANCE_NAME = SystemMessage.id(SystemMessageId.INCORRECT_ALLIANCE_NAME);
  public static final SystemMessage INCORRECT_ALLIANCE_NAME_LENGTH = SystemMessage.id(SystemMessageId.INCORRECT_ALLIANCE_NAME_LENGTH);
  public static final SystemMessage ALLIANCE_ALREADY_EXISTS = SystemMessage.id(SystemMessageId.ALLIANCE_ALREADY_EXISTS);

  public static final SystemMessage CANNOT_DISSOLVE_ALLY_WHILE_IN_SIEGE = SystemMessage.id(SystemMessageId.CANNOT_DISSOLVE_ALLY_WHILE_IN_SIEGE);
  public static final SystemMessage ALLIANCE_DISOLVED = SystemMessage.id(SystemMessageId.ALLIANCE_DISOLVED);
  public static final SystemMessage CANNOT_RISE_LEVEL_WHILE_DISSOLUTION_IN_PROGRESS = SystemMessage.id(SystemMessageId.CANNOT_RISE_LEVEL_WHILE_DISSOLUTION_IN_PROGRESS);
  public static final SystemMessage FAILED_TO_INCREASE_CLAN_LEVEL = SystemMessage.id(SystemMessageId.FAILED_TO_INCREASE_CLAN_LEVEL);
  public static final SystemMessage CLAN_CAN_ACCUMULATE_CLAN_REPUTATION_POINTS = SystemMessage.id(SystemMessageId.CLAN_CAN_ACCUMULATE_CLAN_REPUTATION_POINTS);
  public static final SystemMessage CLAN_LEVEL_INCREASED = SystemMessage.id(SystemMessageId.CLAN_LEVEL_INCREASED);
  public static final SystemMessage YOU_LEFT_PARTY = SystemMessage.id(SystemMessageId.YOU_LEFT_PARTY);
  public static final SystemMessage YOU_CANNOT_TRANSFER_RIGHTS_TO_YOURSELF = SystemMessage.id(SystemMessageId.YOU_CANNOT_TRANSFER_RIGHTS_TO_YOURSELF);
  public static final SystemMessage YOU_CAN_TRANSFER_RIGHTS_ONLY_TO_ANOTHER_PARTY_MEMBER = SystemMessage.id(SystemMessageId.YOU_CAN_TRANSFER_RIGHTS_ONLY_TO_ANOTHER_PARTY_MEMBER);

  public static final SystemMessage SINCE_80_PERCENT_OR_MORE_OF_YOUR_INVENTORY_SLOTS_ARE_FULL_YOU_CANNOT_PARTICIPATE_IN_THE_OLYMPIAD = SystemMessage.id(SystemMessageId.SINCE_80_PERCENT_OR_MORE_OF_YOUR_INVENTORY_SLOTS_ARE_FULL_YOU_CANNOT_PARTICIPATE_IN_THE_OLYMPIAD);
  public static final SystemMessage THE_GAME_HAS_BEEN_CANCELLED_BECAUSE_THE_OTHER_PARTY_DOES_NOT_MEET_THE_REQUIREMENTS_FOR_JOINING_THE_GAME = SystemMessage.id(SystemMessageId.THE_GAME_HAS_BEEN_CANCELLED_BECAUSE_THE_OTHER_PARTY_DOES_NOT_MEET_THE_REQUIREMENTS_FOR_JOINING_THE_GAME);
  public static final SystemMessage WAR_PROCLAMATION_HAS_BEEN_REFUSED = SystemMessage.id(SystemMessageId.WAR_PROCLAMATION_HAS_BEEN_REFUSED);
  public static final SystemMessage REQUEST_TO_END_WAR_HAS_BEEN_DENIED = SystemMessage.id(SystemMessageId.REQUEST_TO_END_WAR_HAS_BEEN_DENIED);
  public static final SystemMessage CANT_RESTART_WHILE_FIGHTING = SystemMessage.id(SystemMessageId.CANT_RESTART_WHILE_FIGHTING);

  public static final SystemMessage CANNOT_SET_CREST_WHILE_DISSOLUTION_IN_PROGRESS = SystemMessage.id(SystemMessageId.CANNOT_SET_CREST_WHILE_DISSOLUTION_IN_PROGRESS);
  public static final SystemMessage CLAN_CREST_HAS_BEEN_DELETED = SystemMessage.id(SystemMessageId.CLAN_CREST_HAS_BEEN_DELETED);
  public static final SystemMessage CLAN_LVL_3_NEEDED_TO_SET_CREST = SystemMessage.id(SystemMessageId.CLAN_LVL_3_NEEDED_TO_SET_CREST);

  public static final SystemMessage CLAN_WAR_DECLARED_IF_CLAN_LVL3_OR_15_MEMBER = SystemMessage.id(SystemMessageId.CLAN_WAR_DECLARED_IF_CLAN_LVL3_OR_15_MEMBER);
  public static final SystemMessage CLAN_WAR_CANNOT_DECLARED_CLAN_NOT_EXIST = SystemMessage.id(SystemMessageId.CLAN_WAR_CANNOT_DECLARED_CLAN_NOT_EXIST);
  public static final SystemMessage CLAN_WAR_AGAINST_A_ALLIED_CLAN_NOT_WORK = SystemMessage.id(SystemMessageId.CLAN_WAR_AGAINST_A_ALLIED_CLAN_NOT_WORK);

  public static final SystemMessage CLAN_LEADER_CANNOT_WITHDRAW = SystemMessage.id(SystemMessageId.CLAN_LEADER_CANNOT_WITHDRAW);
  public static final SystemMessage YOU_CANNOT_LEAVE_DURING_COMBAT = SystemMessage.id(SystemMessageId.YOU_CANNOT_LEAVE_DURING_COMBAT);
  public static final SystemMessage YOU_HAVE_WITHDRAWN_FROM_CLAN = SystemMessage.id(SystemMessageId.YOU_HAVE_WITHDRAWN_FROM_CLAN);
  public static final SystemMessage YOU_MUST_WAIT_BEFORE_JOINING_ANOTHER_CLAN = SystemMessage.id(SystemMessageId.YOU_MUST_WAIT_BEFORE_JOINING_ANOTHER_CLAN);
  public static final SystemMessage THE_PURCHASE_PRICE_IS_HIGHER_THAN_MONEY = SystemMessage.id(SystemMessageId.THE_PURCHASE_PRICE_IS_HIGHER_THAN_MONEY);

  public static final SystemMessage ALREADY_TRADING = SystemMessage.id(SystemMessageId.ALREADY_TRADING);

  public static final SystemMessage CLAN_INFO_FOOT = SystemMessage.id(SystemMessageId.CLAN_INFO_FOOT);
  public static final SystemMessage CLAN_INFO_HEAD = SystemMessage.id(SystemMessageId.CLAN_INFO_HEAD);
  public static final SystemMessage ALLIANCE_INFO_HEAD = SystemMessage.id(SystemMessageId.ALLIANCE_INFO_HEAD);

  public static final SystemMessage YOU_HAVE_BEEN_DISCONNECTED = SystemMessage.id(SystemMessageId.YOU_HAVE_BEEN_DISCONNECTED);
  public static final SystemMessage SKILL_REMOVED_DUE_LACK_HP = SystemMessage.id(SystemMessageId.SKILL_REMOVED_DUE_LACK_HP);
  public static final SystemMessage SKILL_REMOVED_DUE_LACK_MP = SystemMessage.id(SystemMessageId.SKILL_REMOVED_DUE_LACK_MP);
  public static final SystemMessage YOUR_EXCELLENT_SHIELD_DEFENSE_WAS_A_SUCCESS = SystemMessage.id(SystemMessageId.YOUR_EXCELLENT_SHIELD_DEFENSE_WAS_A_SUCCESS);
  public static final SystemMessage DRAIN_HALF_SUCCESFUL = SystemMessage.id(SystemMessageId.DRAIN_HALF_SUCCESFUL);

  public static final SystemMessage CUBIC_SUMMONING_FAILED = SystemMessage.id(SystemMessageId.CUBIC_SUMMONING_FAILED);
  public static final SystemMessage CANNOT_INVITE_YOURSELF = SystemMessage.id(SystemMessageId.CANNOT_INVITE_YOURSELF);
  public static final SystemMessage ALREDAY_SPOILED = SystemMessage.id(SystemMessageId.ALREDAY_SPOILED);
  public static final SystemMessage SPOIL_SUCCESS = SystemMessage.id(SystemMessageId.SPOIL_SUCCESS);
  public static final SystemMessage THIS_COMMAND_CAN_ONLY_BE_USED_BY_A_NOBLESSE = SystemMessage.id(SystemMessageId.THIS_COMMAND_CAN_ONLY_BE_USED_BY_A_NOBLESSE);
  public static final SystemMessage PREPARATIONS_PERIOD_BEGUN = SystemMessage.id(SystemMessageId.PREPARATIONS_PERIOD_BEGUN);
  public static final SystemMessage COMPETITION_PERIOD_BEGUN = SystemMessage.id(SystemMessageId.COMPETITION_PERIOD_BEGUN);
  public static final SystemMessage RESULTS_PERIOD_BEGUN = SystemMessage.id(SystemMessageId.RESULTS_PERIOD_BEGUN);
  public static final SystemMessage VALIDATION_PERIOD_BEGUN = SystemMessage.id(SystemMessageId.VALIDATION_PERIOD_BEGUN);
  public static final SystemMessage DAWN_OBTAINED_AVARICE = SystemMessage.id(SystemMessageId.DAWN_OBTAINED_AVARICE);
  public static final SystemMessage DUSK_OBTAINED_AVARICE = SystemMessage.id(SystemMessageId.DUSK_OBTAINED_AVARICE);
  public static final SystemMessage DAWN_OBTAINED_GNOSIS = SystemMessage.id(SystemMessageId.DAWN_OBTAINED_GNOSIS);
  public static final SystemMessage DUSK_OBTAINED_GNOSIS = SystemMessage.id(SystemMessageId.DUSK_OBTAINED_GNOSIS);
  public static final SystemMessage DAWN_OBTAINED_STRIFE = SystemMessage.id(SystemMessageId.DAWN_OBTAINED_STRIFE);
  public static final SystemMessage DUSK_OBTAINED_STRIFE = SystemMessage.id(SystemMessageId.DUSK_OBTAINED_STRIFE);
  public static final SystemMessage QUEST_EVENT_PERIOD_BEGUN = SystemMessage.id(SystemMessageId.QUEST_EVENT_PERIOD_BEGUN);
  public static final SystemMessage QUEST_EVENT_PERIOD_ENDED = SystemMessage.id(SystemMessageId.QUEST_EVENT_PERIOD_ENDED);
  public static final SystemMessage DAWN_WON = SystemMessage.id(SystemMessageId.DAWN_WON);
  public static final SystemMessage DUSK_WON = SystemMessage.id(SystemMessageId.DUSK_WON);
  public static final SystemMessage SEAL_VALIDATION_PERIOD_BEGUN = SystemMessage.id(SystemMessageId.SEAL_VALIDATION_PERIOD_BEGUN);
  public static final SystemMessage SEAL_VALIDATION_PERIOD_ENDED = SystemMessage.id(SystemMessageId.SEAL_VALIDATION_PERIOD_ENDED);
  public static final SystemMessage THE_GAME_HAS_BEEN_CANCELLED_BECAUSE_THE_OTHER_PARTY_ENDS_THE_GAME = SystemMessage.id(SystemMessageId.THE_GAME_HAS_BEEN_CANCELLED_BECAUSE_THE_OTHER_PARTY_ENDS_THE_GAME);
  public static final SystemMessage THE_COMMAND_CHANNEL_HAS_BEEN_FORMED = SystemMessage.id(SystemMessageId.THE_COMMAND_CHANNEL_HAS_BEEN_FORMED);
  public static final SystemMessage THE_COMMAND_CHANNEL_HAS_BEEN_DISBANDED = SystemMessage.id(SystemMessageId.THE_COMMAND_CHANNEL_HAS_BEEN_DISBANDED);
  public static final SystemMessage YOU_ARE_NOW_BLOCKING_EVERYTHING = SystemMessage.id(SystemMessageId.YOU_ARE_NOW_BLOCKING_EVERYTHING);
  public static final SystemMessage YOU_ARE_NO_LONGER_BLOCKING_EVERYTHING = SystemMessage.id(SystemMessageId.YOU_ARE_NO_LONGER_BLOCKING_EVERYTHING);
  public static final SystemMessage S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_ENGAGED_IN_BATTLE = SystemMessage.id(SystemMessageId.S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_ENGAGED_IN_BATTLE);
  public static final SystemMessage S1_CANNOT_DUEL_BECAUSE_S1S_HP_OR_MP_IS_BELOW_50_PERCENT = SystemMessage.id(SystemMessageId.S1_CANNOT_DUEL_BECAUSE_S1S_HP_OR_MP_IS_BELOW_50_PERCENT);
  public static final SystemMessage S1_CANNOT_DUEL_BECAUSE_S1_IS_ALREADY_ENGAGED_IN_A_DUEL = SystemMessage.id(SystemMessageId.S1_CANNOT_DUEL_BECAUSE_S1_IS_ALREADY_ENGAGED_IN_A_DUEL);
  public static final SystemMessage S1_CANNOT_DUEL_BECAUSE_S1_IS_PARTICIPATING_IN_THE_OLYMPIAD = SystemMessage.id(SystemMessageId.S1_CANNOT_DUEL_BECAUSE_S1_IS_PARTICIPATING_IN_THE_OLYMPIAD);
  public static final SystemMessage S1_CANNOT_DUEL_BECAUSE_S1_IS_IN_A_CHAOTIC_STATE = SystemMessage.id(SystemMessageId.S1_CANNOT_DUEL_BECAUSE_S1_IS_IN_A_CHAOTIC_STATE);
  public static final SystemMessage S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_ENGAGED_IN_A_PRIVATE_STORE_OR_MANUFACTURE = SystemMessage.id(SystemMessageId.S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_ENGAGED_IN_A_PRIVATE_STORE_OR_MANUFACTURE);
  public static final SystemMessage S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_RIDING_A_BOAT_WYVERN_OR_STRIDER = SystemMessage.id(SystemMessageId.S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_RIDING_A_BOAT_WYVERN_OR_STRIDER);
  public static final SystemMessage S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_FISHING = SystemMessage.id(SystemMessageId.S1_CANNOT_DUEL_BECAUSE_S1_IS_CURRENTLY_FISHING);
  public static final SystemMessage S1_CANNOT_MAKE_A_CHALLANGE_TO_A_DUEL_BECAUSE_S1_IS_CURRENTLY_IN_A_DUEL_PROHIBITED_AREA = SystemMessage.id(SystemMessageId.S1_CANNOT_MAKE_A_CHALLANGE_TO_A_DUEL_BECAUSE_S1_IS_CURRENTLY_IN_A_DUEL_PROHIBITED_AREA);
  public static final SystemMessage S1_CANNOT_RECEIVE_A_DUEL_CHALLENGE_BECAUSE_S1_IS_TOO_FAR_AWAY = SystemMessage.id(SystemMessageId.S1_CANNOT_RECEIVE_A_DUEL_CHALLENGE_BECAUSE_S1_IS_TOO_FAR_AWAY);
  public static final SystemMessage PARTY_DISPERSED = SystemMessage.id(SystemMessageId.PARTY_DISPERSED);

  public static final SystemMessage ANSWER_TIMEOUT = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0412\u0440\u0435\u043C\u044F \u043D\u0430 \u043E\u0442\u0432\u0435\u0442 \u0438\u0441\u0442\u0435\u043A\u043B\u043E.");
  public static final SystemMessage CANT_SET_WHILE_CAST = SystemMessage.id(SystemMessageId.S1_S2).addString("Cannot sit while casting.");
  public static final SystemMessage TRY_ON_ENDED = SystemMessage.id(SystemMessageId.S1_S2).addString("Trying-on mode has ended.");
  public static final SystemMessage WEDDING_YES = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0414\u0430\u0430\u0430\u0430\u0430!");
  public static final SystemMessage WEDDING_NO = SystemMessage.id(SystemMessageId.S1_S2).addString("\u041D\u0435\u0442 :(");
  public static final SystemMessage MAX_3_DYES = SystemMessage.id(SystemMessageId.S1_S2).addString("\u041C\u0430\u043A\u0441\u0438\u043C\u0443\u043C 3 \u0442\u0430\u0442\u0443.");
  public static final SystemMessage CHAT_UNBLOCKED = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0412\u0440\u0435\u043C\u044F \u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u043A\u0438 \u0447\u0430\u0442\u0430 \u0438\u0441\u0442\u0435\u043A\u043B\u043E.");
  public static final SystemMessage CANT_IN_DUEL = SystemMessage.id(SystemMessageId.S1_S2).addString("You cannot do this while duelling.");
  public static final SystemMessage SHADOW_SENSE_ON = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0421\u0435\u0439\u0447\u0430\u0441 \u043F\u043E\u043B\u043D\u043E\u0447\u044C \u0438 \u0432\u044B \u043E\u0449\u0443\u0449\u0430\u0435\u0442\u0435 \u044D\u0444\u0444\u0435\u043A\u0442 \u043E\u0442 Shadow Sense.");
  public static final SystemMessage SHADOW_SENSE_OFF = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0423\u0436\u0435 \u0440\u0430\u0441\u0441\u0432\u0435\u0442 \u0438 \u044D\u0444\u0444\u0435\u043A\u0442 \u043E\u0442 Shadow Sense \u0438\u0441\u0447\u0435\u0437\u0430\u0435\u0442.");
  public static final SystemMessage NO_SUMMON_CRY = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0412\u044B \u043D\u0435 \u043C\u043E\u0436\u0435\u0442\u0435 \u0431\u044B\u0442\u044C \u043F\u0440\u0438\u0437\u0432\u0430\u043D\u044B \u0431\u0435\u0437 Summoning Crystal.");
  public static final SystemMessage CANT_TELE_ON_EVENT = SystemMessage.id(SystemMessageId.S1_S2).addString("\u041D\u0435\u043B\u044C\u0437\u044F \u0442\u0435\u043B\u0435\u043F\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u0430\u0442\u044C\u0441\u044F \u043D\u0430 \u0438\u0432\u0435\u043D\u0442\u0435.");
  public static final SystemMessage WRONG_PLACE = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0412\u044B \u0431\u044B\u043B\u0438 \u043F\u0435\u0440\u0435\u043C\u0435\u0449\u0435\u043D\u044B, \u0442.\u043A. \u0443 \u0432\u0430\u0441 \u043D\u0435\u0442 \u043F\u0440\u0430\u0432 \u043D\u0430\u0445\u043E\u0434\u0438\u0442\u044C\u0441\u044F \u0432 \u0434\u0430\u043D\u043D\u043E\u043C \u043C\u0435\u0441\u0442\u0435.");
  public static final SystemMessage WRONG_LVL_46 = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0422\u043E\u043B\u044C\u043A\u043E \u043F\u0435\u0440\u0441\u043E\u043D\u0430\u0436\u0438 \u0432\u044B\u0448\u0435 46 \u0443\u0440\u043E\u0432\u043D\u044F \u043C\u043E\u0433\u0443\u0442 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u0430\u0443\u0433\u043C\u0435\u043D\u0442\u0430\u0446\u0438\u044E.");
  public static final SystemMessage NO_KARRMA_TELE = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0423\u0431\u0438\u0439\u0446\u0430 \u0438\u0433\u0440\u043E\u043A\u043E\u0432! \u041E\u0445\u0440\u0430\u043D\u0430!");
  public static final SystemMessage PLAYER_NOT_IN_GAME = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0418\u0433\u0440\u043E\u043A \u0434\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u0432 \u0438\u0433\u0440\u0435.");
  public static final SystemMessage PLAYER_NOT_IN_YOR_CLAN = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0418\u0433\u0440\u043E\u043A \u043D\u0435 \u0441\u043E\u0441\u0442\u043E\u0438\u0442 \u0432 \u0432\u0430\u0448\u0435\u043C \u043A\u043B\u0430\u043D\u0435.");
  public static final SystemMessage YOU_MAY_NOT_SUMMON_NEAR_DOORS = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0412\u044B \u043D\u0435 \u043C\u043E\u0436\u0435\u0442\u0435 \u0441\u0443\u043C\u043C\u043E\u043D\u0438\u0442\u044C \u0432\u043E\u0437\u043B\u0435 \u0434\u0432\u0435\u0440\u0435\u0439.");
  public static final SystemMessage FORBIDDEN_BOW_CLASS = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0412\u0430\u0448\u0435\u043C\u0443 \u043A\u043B\u0430\u0441\u0441\u0443 \u0437\u0430\u043F\u0440\u0435\u0449\u0435\u043D\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u043B\u0443\u043A.");
  public static final SystemMessage CANT_LOOT_DEAD = SystemMessage.id(SystemMessageId.S1_S2).addString("Dead can dance, but can't loot");
  public static final SystemMessage SENT_TO_WAITING_ROOM = SystemMessage.id(SystemMessageId.S1_S2).addString("You have been sent to the waiting room.");
  public static final SystemMessage SA_BUFFED_OK = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0421\u0440\u0430\u0431\u043E\u0442\u0430\u043B \u0421\u0410-\u0431\u0430\u0444\u0444!");
  public static final SystemMessage ONLY_FOR_CLANLEADER = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0422\u043E\u043B\u044C\u043A\u043E \u043B\u0438\u0434\u0435\u0440 \u043A\u043B\u0430\u043D\u0430 \u043C\u043E\u0436\u0435\u0442 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u044D\u0442\u043E");
  public static final SystemMessage ONLY_FOR_CASTLEOWNER = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0422\u043E\u043B\u044C\u043A\u043E \u0432\u043B\u0430\u0434\u0435\u043B\u0435\u0446 \u0437\u0430\u043C\u043A\u0430 \u043C\u043E\u0436\u0435\u0442 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u044D\u0442\u043E");
  public static final SystemMessage CANT_LEARN_SKILL = SystemMessage.id(SystemMessageId.S1_S2).addString("You are trying to learn skill that u can't..");
  public static final SystemMessage SKILL_NOT_DONE = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0421\u043A\u0438\u043B\u043B \u043F\u043E\u0447\u0435\u043C\u0443-\u0442\u043E \u043D\u0435 \u0440\u0430\u0431\u043E\u0442\u0430\u0435\u0442, \u0441\u043E\u043E\u0431\u0449\u0438\u0442\u0435 \u0430\u0434\u043C\u0438\u043D\u0438\u0441\u0442\u0440\u0430\u0442\u043E\u0440\u0443.");
  public static final SystemMessage ALREADY_HAVE_PARTNER = SystemMessage.id(SystemMessageId.S1_S2).addString("\u0423 \u0432\u0430\u0441 \u0443\u0436\u0435 \u0435\u0441\u0442\u044C \u043A\u043E\u043C\u043F\u0430\u043D\u044C\u043E\u043D.");
  public static final SystemMessage NOT_FOR_CURSED = SystemMessage.id(SystemMessageId.S1_S2).addString("\u041D\u0435 \u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u043E \u0441 \u043F\u0440\u043E\u043A\u043B\u044F\u0442\u044B\u043C \u043E\u0440\u0443\u0436\u0438\u0435\u043C.");
  public static final String STATE_INVUL = "Immortal mode.";
  public static final String STATE_INVIS = "Invisible mode.";
  public static final String STATE_PMBLOCK = "Message Refusal mode.";
  public static final String SEVEN_SGINS1 = "You have been teleported to the nearest town due to the beginning of the Seal Validation period.";
  public static final String SEVEN_SGINS2 = "You have been teleported to the nearest town because you have not signed for any cabal.";
  public static final L2GameServerPacket ExShowVariationMakeWindow = new ExShowVariationMakeWindow();
  public static final L2GameServerPacket ExShowVariationCancelWindow = new ExShowVariationCancelWindow();
  public static final L2GameServerPacket ActionFailed = new ActionFailed();
  public static final L2GameServerPacket ServerClose = new ServerClose();
  public static final L2GameServerPacket LeaveWorld = new LeaveWorld();
  public static final L2GameServerPacket TradePressOtherOk = new TradePressOtherOk();
  public static final L2GameServerPacket TradePressOwnOk = new TradePressOwnOk();
  public static final L2GameServerPacket ExOpenMPCC = new ExOpenMPCC();
  public static final L2GameServerPacket ExCloseMPCC = new ExCloseMPCC();
  public static final L2GameServerPacket ExMailArrived = new ExMailArrived();
  public static final L2GameServerPacket PartySmallWindowDeleteAll = new PartySmallWindowDeleteAll();
  public static L2GameServerPacket AdmWarnings;
  public static L2GameServerPacket MEDALS_EVENT = null;
  public static L2GameServerPacket GAME_GUARD = null;
  public static SystemMessage PROFILE_SAVED;
  public static SystemMessage FULL_RESTORE;
  public static SystemMessage BUFFS_CANCEL;
  public static SystemMessage BUFFS_UPDATE;
  public static SystemMessage SKILLS_RELOAD;
  public static SystemMessage HERO_DELAY;
  public static SystemMessage CHAT_BLOCKED;
  public static SystemMessage PLAYER_BLOCKED;
  public static SystemMessage SIEGE_HAVE_CASTLE;
  public static SystemMessage SIEGE_NO_REG;
  public static SystemMessage CW_21;
  public static SystemMessage CW_20;
  public static SystemMessage FULL_PLEDGE;
  public static SystemMessage KEADER_NOT_CORRECT;
  public static SystemMessage NOT_PET_OWNER;
  public static SystemMessage CANT_LOGOUT_OLY;
  public static SystemMessage CANT_LOGOUT_TRADE;
  public static SystemMessage FRIEND_NOT_FOUND;
  public static SystemMessage FILE_TRANSFER_ERROR;
  public static SystemMessage CLAN_CREST_256;
  public static SystemMessage WAR_NOT_LEADER;
  public static SystemMessage CLAN_NOT_FOUND;
  public static SystemMessage NO_WAR;
  public static SystemMessage WRONG_COUNT;
  public static SystemMessage ITEM_NOT_FOUND;
  public static SystemMessage LEAVE_ALONR;
  public static SystemMessage HAVE_CUBIC;
  public static SystemMessage HAVE_PET;
  public static SystemMessage SUMMON_WRONG_PLACE;
  public static SystemMessage CANT_TRADE_NEAR;
  public static SystemMessage CLAN_5LVL_HIGHER;
  public static SystemMessage WRONG_WEAPON;
  public static SystemMessage SEAL_VAL1;
  public static SystemMessage SEAL_VAL2;
  public static SystemMessage BBS_PEACE;
  public static SystemMessage CANT_BE_SUMMONED;
  public static SystemMessage CANT_BE_SUMMONED_NOW;
  public static SystemMessage WRONG_PLACE_CAST_RULE;
  public static SystemMessage NOT_ENOUGH_FORCES;
  public static SystemMessage TARGET_IS_INVUL;
  public static SystemMessage OLYMPIAD_GAME_KARMA;
  public static SystemMessage OLYMPIAD_GAME_LESS_POINTS;
  public static SystemMessage NOT_TRADE_ZONE;
  public static SystemMessage NOT_ENOUGH_PCPOINTS;
  public static String CONSUMED_S1_PCPOINTS;
  public static String EARNED_S1_PCPOINTS;
  public static NpcHtmlMessage SERVER_WELCOME;
  public static NpcHtmlMessage SET_CHAR_KEY;
  public static NpcHtmlMessage UNBLOCK_CHAR_KEY;
  public static NpcHtmlMessage CHANGE_EMAIL;
  public static NpcHtmlMessage SET_KEY_ERROR4_16;
  public static NpcHtmlMessage SET_KEY_OK;
  public static String EVENT_DISABLED;
  public static L2GameServerPacket ANARCHY_EVENT = null;
  public static String ANARCHY_STARTED;
  public static String ANARCHY_FINISHED;
  public static String EBC_STARTED;
  public static String EBC_REG_FOR_S1;
  public static String EBC_REG_LOST_S1;
  public static String EBC_REG_REG;
  public static String EBC_NO_PLAYESR_YET;
  public static String EBC_REG_CLOSED;
  public static String EBC_PLAYER_TEAMS;
  public static String EBC_NEXT_AFTER;
  public static String EBC_BATTLE_STRTED_AFTER;
  public static String EBC_FINISHED;
  public static String EBC_TEAM_S1_WIN;
  public static String EBC_NO_PLAYERS;
  public static String EENC_STARTED;
  public static String EENC_REG_FOR_S1;
  public static String EENC_REG_REG;
  public static String EENC_REG_LOST_S1;
  public static String EENC_NO_PLAYESR_YET;
  public static String EENC_PLAYER_TEAMS;
  public static String EENC_REG_CLOSED;
  public static String EENC_NO_PLAYERS;
  public static String EENC_NEXT_AFTER;
  public static String EENC_SEARCH_AFTER;
  public static String EENC_GO_STRIDER;
  public static String EENC_FINISHED;
  public static String EENC_WINNER;
  public static String SCH_STARTED;
  public static String SCH_STEP1;
  public static String SCH_STEP2;
  public static String SCH_STEP3;
  public static String SCH_STEP4;
  public static String SCH_STEP5;
  public static String SCH_FAIL;
  public static String SCH_WIN;
  public static String SCH_ADM_CANCEL;
  public static String FIGHTING_STARTED;
  public static String FIGHTING_REG_FOR_S1;
  public static String FIGHTING_REG_REG;
  public static String FIGHTING_REG_LAST_FOR_S1;
  public static String FIGHTING_NO_PLAYESR_YET;
  public static String FIGHTING_REGGED_PLAYERS;
  public static String FIGHTING_REG_CLOSED;
  public static String FIGHTING_CANCELED_NO_PLAYERS;
  public static String FIGHTING_BATTLE_STRT_AFTER;
  public static String FIGHTING_BATTLE_STRTED;
  public static String FIGHTING_FINISHED;
  public static String FIGHTING_WINNER_S1;
  public static String FIGHTING_NEXT_EVENT_S1;
  public static String LH_STARTED;
  public static String LH_REG_FOR_S1;
  public static String LH_REG_IN;
  public static String LH_REG_LOST_S1;
  public static String LH_NO_PLAYESR_YET;
  public static String LH_REGD_PLAYESR;
  public static String LH_REG_CLOSED;
  public static String LH_CANC_NO_PLAYERS;
  public static String LH_NEXT_TIME;
  public static String LH_BATTLE_AFTER;
  public static String LH_DONE;
  public static String LH_WINNER;
  public static String LH_NEXT_AFTER;
  public static String SHO_ONLINE_ALL;
  public static String SHO_ONLINE_TRD;
  public static String SHO_ONLINE_REC;
  public static String SHO_ONLINE_WAS;
  public static SystemMessage WIFE_LOGIN;
  public static SystemMessage AUNT_LOGIN;
  public static SystemMessage UNREAD_MAIL;
  public static String ANTQUEEN_SPAWNED;
  public static String ANTARAS_SPAWNED;
  public static String BAIUM_SPAWNED;
  public static String VALAKAS_SPAWNED;
  public static String ZAKEN_SPAWNED;
  public static String FRINTEZZA_SPAWNED;
  public static String ANTQUEEN_DIED;
  public static String ANTARAS_DIED;
  public static String BAIUM_DIED;
  public static String VALAKAS_DIED;
  public static String ZAKEN_DIED;
  public static String FRINTEZZA_DIED;
  public static String TVT_CANCELED;
  public static String TVT_REG_FOR_S1;
  public static String TVT_TELE_ARENA_S1;
  public static String TVT_RETURN_TOWN_S1;
  public static String TVT_REG_FOR_S1_HOURS;
  public static String TVT_FINISH_FOR_S1_HOURS;
  public static String TVT_GAME_END_S1_MIN_WINNERS_S2;
  public static String TVT_REG_FOR_S1_MIN;
  public static String TVT_TEAMS_IN_TIE;
  public static String TVT_GAME_END_S1_SECS_WINNERS_S2;
  public static String TVT_GAME_END_S1_SEC_WINNERS_S2;
  public static String TVT_REG_FOR_S1_SEC;
  public static String TVT_GAME_END_S1_SECS;
  public static String TVT_FINISHED_INACTIVE;
  public static String TVT_S1_WIN_KILLS_S2;
  public static String MPVP_STARTED;
  public static String MPVP_REG_FOR;
  public static String MPVP_CANCELED_NO_PLAYERS;
  public static String MPVP_REG_CLOSED;
  public static String MPVP_TELE_ARENA_FOR;
  public static String MPVP_BEGIN_ROUND;
  public static String MPVP_FINAL_ROUND;
  public static String MPVP_BATTLA_PREPARE_FOR;
  public static String MPVP_BATTLE_BEGIN_FOR;
  public static String MPVP_FIGHT;
  public static String MPVP_FINAL_FIGHT;
  public static String MPVP_ROUND_END_FOR;
  public static String MPVP_ROUND_ENDED;
  public static String MPVP_FINAL_ENDED;
  public static String MPVP_GO_FINAL;
  public static String MPVP_ADMIN_CANCEL;
  public static String MPVP_ROUND_WINNER;
  public static String MPVP_ENDED;
  public static String MPVP_WINNER_IS;
  public static String MPVP_GRATS_WINNER;

  public static void init()
  {
    TVT_CANCELED = CustomServerData.getInstance().getMessage(140);
    TVT_REG_FOR_S1 = CustomServerData.getInstance().getMessage(141);
    TVT_TELE_ARENA_S1 = CustomServerData.getInstance().getMessage(142);
    TVT_RETURN_TOWN_S1 = CustomServerData.getInstance().getMessage(143);
    TVT_REG_FOR_S1_HOURS = CustomServerData.getInstance().getMessage(144);
    TVT_FINISH_FOR_S1_HOURS = CustomServerData.getInstance().getMessage(145);
    TVT_GAME_END_S1_MIN_WINNERS_S2 = CustomServerData.getInstance().getMessage(146);
    TVT_REG_FOR_S1_MIN = CustomServerData.getInstance().getMessage(147);
    TVT_TEAMS_IN_TIE = CustomServerData.getInstance().getMessage(148);
    TVT_GAME_END_S1_SECS_WINNERS_S2 = CustomServerData.getInstance().getMessage(149);
    TVT_GAME_END_S1_SEC_WINNERS_S2 = CustomServerData.getInstance().getMessage(150);
    TVT_REG_FOR_S1_SEC = CustomServerData.getInstance().getMessage(151);
    TVT_GAME_END_S1_SECS = CustomServerData.getInstance().getMessage(152);
    TVT_FINISHED_INACTIVE = CustomServerData.getInstance().getMessage(153);
    TVT_S1_WIN_KILLS_S2 = CustomServerData.getInstance().getMessage(154);

    SCH_STARTED = CustomServerData.getInstance().getMessage(78);
    SCH_STEP1 = CustomServerData.getInstance().getMessage(79);
    SCH_STEP2 = CustomServerData.getInstance().getMessage(80);
    SCH_STEP3 = CustomServerData.getInstance().getMessage(81);
    SCH_STEP4 = CustomServerData.getInstance().getMessage(82);
    SCH_STEP5 = CustomServerData.getInstance().getMessage(83);
    SCH_FAIL = CustomServerData.getInstance().getMessage(84);
    SCH_WIN = CustomServerData.getInstance().getMessage(85);
    SCH_ADM_CANCEL = CustomServerData.getInstance().getMessage(86);

    SHO_ONLINE_ALL = CustomServerData.getInstance().getMessage(87);
    SHO_ONLINE_TRD = CustomServerData.getInstance().getMessage(88);
    SHO_ONLINE_REC = CustomServerData.getInstance().getMessage(89);
    SHO_ONLINE_WAS = CustomServerData.getInstance().getMessage(90);

    WIFE_LOGIN = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(91));
    AUNT_LOGIN = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(92));
    UNREAD_MAIL = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(93));

    FIGHTING_STARTED = CustomServerData.getInstance().getMessage(94);
    FIGHTING_REG_FOR_S1 = CustomServerData.getInstance().getMessage(95);
    FIGHTING_REG_REG = CustomServerData.getInstance().getMessage(96);
    FIGHTING_REG_LAST_FOR_S1 = CustomServerData.getInstance().getMessage(97);
    FIGHTING_NO_PLAYESR_YET = CustomServerData.getInstance().getMessage(98);
    FIGHTING_REGGED_PLAYERS = CustomServerData.getInstance().getMessage(99);
    FIGHTING_REG_CLOSED = CustomServerData.getInstance().getMessage(100);
    FIGHTING_CANCELED_NO_PLAYERS = CustomServerData.getInstance().getMessage(101);
    FIGHTING_BATTLE_STRT_AFTER = CustomServerData.getInstance().getMessage(102);
    FIGHTING_BATTLE_STRTED = CustomServerData.getInstance().getMessage(103);
    FIGHTING_FINISHED = CustomServerData.getInstance().getMessage(104);
    FIGHTING_WINNER_S1 = CustomServerData.getInstance().getMessage(105);
    FIGHTING_NEXT_EVENT_S1 = CustomServerData.getInstance().getMessage(106);

    ANTQUEEN_SPAWNED = CustomServerData.getInstance().getMessage(107);
    ANTARAS_SPAWNED = CustomServerData.getInstance().getMessage(108);
    BAIUM_SPAWNED = CustomServerData.getInstance().getMessage(109);
    VALAKAS_SPAWNED = CustomServerData.getInstance().getMessage(110);
    ZAKEN_SPAWNED = CustomServerData.getInstance().getMessage(111);
    FRINTEZZA_SPAWNED = CustomServerData.getInstance().getMessage(112);
    ANTQUEEN_DIED = CustomServerData.getInstance().getMessage(113);
    ANTARAS_DIED = CustomServerData.getInstance().getMessage(114);
    BAIUM_DIED = CustomServerData.getInstance().getMessage(115);
    VALAKAS_DIED = CustomServerData.getInstance().getMessage(116);
    ZAKEN_DIED = CustomServerData.getInstance().getMessage(117);
    FRINTEZZA_DIED = CustomServerData.getInstance().getMessage(118);

    LH_STARTED = CustomServerData.getInstance().getMessage(119);
    LH_REG_FOR_S1 = CustomServerData.getInstance().getMessage(120);
    LH_REG_IN = CustomServerData.getInstance().getMessage(121);
    LH_REG_LOST_S1 = CustomServerData.getInstance().getMessage(122);
    LH_NO_PLAYESR_YET = CustomServerData.getInstance().getMessage(123);
    LH_REGD_PLAYESR = CustomServerData.getInstance().getMessage(124);
    LH_REG_CLOSED = CustomServerData.getInstance().getMessage(125);
    LH_CANC_NO_PLAYERS = CustomServerData.getInstance().getMessage(126);
    LH_NEXT_TIME = CustomServerData.getInstance().getMessage(127);
    LH_BATTLE_AFTER = CustomServerData.getInstance().getMessage(128);
    LH_DONE = CustomServerData.getInstance().getMessage(129);
    LH_WINNER = CustomServerData.getInstance().getMessage(130);
    LH_NEXT_AFTER = CustomServerData.getInstance().getMessage(131);

    AdmWarnings = new CreatureSay(0, 15, "\u0412\u043D\u0438\u043C\u0430\u043D\u0438\u0435!", CustomServerData.getInstance().getMessage(1));
    MEDALS_EVENT = new CreatureSay(0, 18, "", CustomServerData.getInstance().getMessage(49));
    PROFILE_SAVED = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(2));
    FULL_RESTORE = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(3));
    BUFFS_CANCEL = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(4));
    BUFFS_UPDATE = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(5));
    SKILLS_RELOAD = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(6));
    HERO_DELAY = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(7));
    CHAT_BLOCKED = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(8));
    PLAYER_BLOCKED = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(9));
    SIEGE_HAVE_CASTLE = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(10));
    SIEGE_NO_REG = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(11));
    CW_21 = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(12));
    CW_20 = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(13));
    FULL_PLEDGE = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(14));
    KEADER_NOT_CORRECT = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(15));
    NOT_PET_OWNER = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(16));
    CANT_LOGOUT_OLY = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(17));
    CANT_LOGOUT_TRADE = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(18));
    FRIEND_NOT_FOUND = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(19));
    FILE_TRANSFER_ERROR = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(20));
    CLAN_CREST_256 = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(21));
    WAR_NOT_LEADER = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(22));
    CLAN_NOT_FOUND = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(23));
    NO_WAR = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(24));
    WRONG_COUNT = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(25));
    ITEM_NOT_FOUND = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(26));
    LEAVE_ALONR = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(27));
    HAVE_CUBIC = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(28));
    HAVE_PET = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(29));
    SUMMON_WRONG_PLACE = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(30));
    CANT_TRADE_NEAR = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(31));
    CLAN_5LVL_HIGHER = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(32));
    WRONG_WEAPON = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(33));
    SEAL_VAL1 = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(34));
    SEAL_VAL2 = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(35));
    BBS_PEACE = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(36));
    CANT_BE_SUMMONED = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(37));
    CANT_BE_SUMMONED_NOW = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(38));
    WRONG_PLACE_CAST_RULE = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(39));
    NOT_ENOUGH_FORCES = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(40));
    TARGET_IS_INVUL = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(41));
    OLYMPIAD_GAME_KARMA = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(42));
    OLYMPIAD_GAME_LESS_POINTS = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(43));
    EVENT_DISABLED = CustomServerData.getInstance().getMessage(44);
    NOT_TRADE_ZONE = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(45));
    NOT_ENOUGH_PCPOINTS = SystemMessage.id(SystemMessageId.S1_S2).addString(CustomServerData.getInstance().getMessage(46));
    CONSUMED_S1_PCPOINTS = CustomServerData.getInstance().getMessage(47);
    EARNED_S1_PCPOINTS = CustomServerData.getInstance().getMessage(48);

    ANARCHY_EVENT = new CreatureSay(0, 18, "", CustomServerData.getInstance().getMessage(50));
    ANARCHY_STARTED = CustomServerData.getInstance().getMessage(51);
    ANARCHY_FINISHED = CustomServerData.getInstance().getMessage(52);

    EBC_STARTED = CustomServerData.getInstance().getMessage(53);
    EBC_REG_FOR_S1 = CustomServerData.getInstance().getMessage(54);
    EBC_REG_REG = CustomServerData.getInstance().getMessage(55);
    EBC_REG_LOST_S1 = CustomServerData.getInstance().getMessage(56);
    EBC_NO_PLAYESR_YET = CustomServerData.getInstance().getMessage(57);
    EBC_PLAYER_TEAMS = CustomServerData.getInstance().getMessage(58);
    EBC_REG_CLOSED = CustomServerData.getInstance().getMessage(59);
    EBC_NO_PLAYERS = CustomServerData.getInstance().getMessage(60);
    EBC_NEXT_AFTER = CustomServerData.getInstance().getMessage(61);
    EBC_BATTLE_STRTED_AFTER = CustomServerData.getInstance().getMessage(62);
    EBC_FINISHED = CustomServerData.getInstance().getMessage(63);
    EBC_TEAM_S1_WIN = CustomServerData.getInstance().getMessage(64);

    EENC_STARTED = CustomServerData.getInstance().getMessage(65);
    EENC_REG_FOR_S1 = CustomServerData.getInstance().getMessage(66);
    EENC_REG_REG = CustomServerData.getInstance().getMessage(67);
    EENC_REG_LOST_S1 = CustomServerData.getInstance().getMessage(68);
    EENC_NO_PLAYESR_YET = CustomServerData.getInstance().getMessage(69);
    EENC_PLAYER_TEAMS = CustomServerData.getInstance().getMessage(70);
    EENC_REG_CLOSED = CustomServerData.getInstance().getMessage(71);
    EENC_NO_PLAYERS = CustomServerData.getInstance().getMessage(72);
    EENC_NEXT_AFTER = CustomServerData.getInstance().getMessage(73);
    EENC_SEARCH_AFTER = CustomServerData.getInstance().getMessage(74);
    EENC_GO_STRIDER = CustomServerData.getInstance().getMessage(76);
    EENC_FINISHED = CustomServerData.getInstance().getMessage(76);
    EENC_WINNER = CustomServerData.getInstance().getMessage(77);

    MPVP_STARTED = CustomServerData.getInstance().getMessage(156);
    MPVP_REG_FOR = CustomServerData.getInstance().getMessage(157);
    MPVP_CANCELED_NO_PLAYERS = CustomServerData.getInstance().getMessage(158);
    MPVP_REG_CLOSED = CustomServerData.getInstance().getMessage(159);
    MPVP_TELE_ARENA_FOR = CustomServerData.getInstance().getMessage(160);
    MPVP_BEGIN_ROUND = CustomServerData.getInstance().getMessage(161);
    MPVP_FINAL_ROUND = CustomServerData.getInstance().getMessage(162);
    MPVP_BATTLA_PREPARE_FOR = CustomServerData.getInstance().getMessage(163);
    MPVP_BATTLE_BEGIN_FOR = CustomServerData.getInstance().getMessage(164);
    MPVP_FIGHT = CustomServerData.getInstance().getMessage(165);
    MPVP_FINAL_FIGHT = CustomServerData.getInstance().getMessage(166);
    MPVP_ROUND_END_FOR = CustomServerData.getInstance().getMessage(167);
    MPVP_ROUND_ENDED = CustomServerData.getInstance().getMessage(168);
    MPVP_FINAL_ENDED = CustomServerData.getInstance().getMessage(169);
    MPVP_GO_FINAL = CustomServerData.getInstance().getMessage(170);
    MPVP_ADMIN_CANCEL = CustomServerData.getInstance().getMessage(171);
    MPVP_ROUND_WINNER = CustomServerData.getInstance().getMessage(172);
    MPVP_ENDED = CustomServerData.getInstance().getMessage(173);
    MPVP_WINNER_IS = CustomServerData.getInstance().getMessage(174);
    MPVP_GRATS_WINNER = CustomServerData.getInstance().getMessage(175);

    updateHtm();

    if (Config.GAMEGUARD_ENABLED)
      GAME_GUARD = new GameGuardQueryEx();
    else
      GAME_GUARD = new GameGuardQuery();
  }

  public static void updateHtm()
  {
    SERVER_WELCOME = NpcHtmlMessage.id(0);
    SERVER_WELCOME.setFile("data/html/welcome.htm");

    SET_CHAR_KEY = NpcHtmlMessage.id(0);
    SET_CHAR_KEY.setFile("data/html/menu/set_form.htm");
    UNBLOCK_CHAR_KEY = NpcHtmlMessage.id(0);
    UNBLOCK_CHAR_KEY.setFile("data/html/menu/unblock_form.htm");

    CHANGE_EMAIL = NpcHtmlMessage.id(0);
    CHANGE_EMAIL.setFile("data/html/menu/set_email.htm");

    SET_KEY_ERROR4_16 = NpcHtmlMessage.id(0);
    SET_KEY_ERROR4_16.setFile("data/html/menu/set_form_error.htm");

    SET_KEY_OK = NpcHtmlMessage.id(0);
    SET_KEY_OK.setFile("data/html/menu/set_form_ok.htm");
  }
}